{
  "info": {
    "title": "Developer API",
    "version": "2.0.0"
  },
  "tags": [
    {
      "name": "App",
      "description": "Operations about apps."
    },
    {
      "name": "Entitlement",
      "description": "Operations about entitlements."
    },
    {
      "name": "Offering",
      "description": "Operations about offerings."
    },
    {
      "name": "Package",
      "description": "Operations about packages."
    },
    {
      "name": "Product",
      "description": "Operations about products."
    },
    {
      "name": "Project",
      "description": "Operations about projects."
    }
  ],
  "servers": [
    {
      "url": "https://api.revenuecat.com/v2"
    }
  ],
  "x-proxy-enabled": false,
  "paths": {
    "/projects": {
      "get": {
        "summary": "Get a list of projects",
        "operationId": "list-projects",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:projects:read"
        ],
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProjectList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value.",
                            "enum": [
                              "project"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the project",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "proj1ab2c3d4"
                          },
                          "name": {
                            "description": "The name of the project",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "example": "MagicWeather"
                          },
                          "created_at": {
                            "description": "The date when the project was created in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the projects. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects?starting_after=projab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:projects:read`."
      }
    },
    "/projects/{project_id}/apps": {
      "get": {
        "summary": "Get a list of apps",
        "operationId": "list-apps",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:apps:read"
        ],
        "tags": [
          "App"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "AppList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "type",
                          "project_id"
                        ],
                        "properties": {
                          "id": {
                            "description": "The id of the app",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "app1a2b3c4"
                          },
                          "name": {
                            "description": "The name of the app",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500
                          },
                          "created_at": {
                            "description": "The date when the app was created in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "type": {
                            "description": "The platform of the app",
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "amazon",
                              "app_store",
                              "mac_app_store",
                              "play_store",
                              "stripe"
                            ],
                            "example": "amazon"
                          },
                          "project_id": {
                            "description": "The id of the project",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "proj1a2b3c4"
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's apps. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/projec1a2b3c4d/apps?starting_after=app1a2b3c4d"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/projec1a2b3c4d/apps"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:apps:read`."
      }
    },
    "/projects/{project_id}/apps/{app_id}": {
      "get": {
        "summary": "Get an app",
        "operationId": "get-app",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:apps:read"
        ],
        "tags": [
          "App"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "app_id",
            "description": "ID of the app",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "app1ab2c3d4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "type",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "name": {
                      "description": "The name of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500
                    },
                    "created_at": {
                      "description": "The date when the app was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "type": {
                      "description": "The platform of the app",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "amazon",
                        "app_store",
                        "mac_app_store",
                        "play_store",
                        "stripe"
                      ],
                      "example": "amazon"
                    },
                    "project_id": {
                      "description": "The id of the project",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "proj1a2b3c4"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:apps:read`."
      }
    },
    "/projects/{project_id}/products/{product_id}": {
      "get": {
        "summary": "Get a product",
        "operationId": "get-product",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:products:read"
        ],
        "x-expandable-fields": [
          "app"
        ],
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "product_id",
            "description": "ID of the product",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "prod1a2b3c4d5"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `app`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "app"
                ],
                "example": "app"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "store_identifier",
                    "type",
                    "created_at",
                    "app_id",
                    "object",
                    "display_name"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "product"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the product",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "prod1a2b3c4d5e"
                    },
                    "store_identifier": {
                      "description": "The store product identifier",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "rc_1w_199"
                    },
                    "type": {
                      "description": "The product type",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "subscription",
                        "one_time"
                      ]
                    },
                    "subscription": {
                      "description": "The subscription product object",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "duration",
                        "grace_period_duration",
                        "trial_duration"
                      ],
                      "properties": {
                        "duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription in ISO-8601 standard",
                          "example": "P1M"
                        },
                        "grace_period_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription's grace period in ISO-8601 standard",
                          "example": "P3D"
                        },
                        "trial_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subcription's trial period in ISO-8601 standard",
                          "example": "P1W"
                        }
                      }
                    },
                    "created_at": {
                      "description": "The date when the product was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "app_id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "app": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "type",
                        "project_id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The id of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "app1a2b3c4"
                        },
                        "name": {
                          "description": "The name of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1500
                        },
                        "created_at": {
                          "description": "The date when the app was created in ms since epoch",
                          "nullable": false,
                          "type": "integer",
                          "example": 1658399423658
                        },
                        "type": {
                          "description": "The platform of the app",
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "amazon",
                            "app_store",
                            "mac_app_store",
                            "play_store",
                            "stripe"
                          ],
                          "example": "amazon"
                        },
                        "project_id": {
                          "description": "The id of the project",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "proj1a2b3c4"
                        }
                      },
                      "description": "The app associated with the product",
                      "nullable": true
                    },
                    "display_name": {
                      "description": "The display name of the product",
                      "nullable": true,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium Monthly 2023"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:products:read`."
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "delete-product",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:products:read_write"
        ],
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "product_id",
            "description": "ID of the product",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "prod1a2b3c4d5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "object",
                    "id",
                    "deleted_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "The type of the deleted object",
                      "enum": [
                        "entitlement",
                        "offering",
                        "package",
                        "product",
                        "customer"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the deleted object",
                      "nullable": false,
                      "type": "string"
                    },
                    "deleted_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the object was deleted in ms since epoch",
                      "example": 1658399423658
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:products:read_write`."
      }
    },
    "/projects/{project_id}/products": {
      "get": {
        "summary": "Get a list of products",
        "operationId": "list-products",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:products:read"
        ],
        "x-expandable-fields": [
          "items.app"
        ],
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "app1a2b3c4"
            },
            "description": "This is an optional query parameter to get a list of products of a given entitlement associated with a particular app"
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `items.app`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "items.app"
                ],
                "example": "items.app"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProductList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "store_identifier",
                          "type",
                          "created_at",
                          "app_id",
                          "object",
                          "display_name"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                            "enum": [
                              "product"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the product",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "prod1a2b3c4d5e"
                          },
                          "store_identifier": {
                            "description": "The store product identifier",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "rc_1w_199"
                          },
                          "type": {
                            "description": "The product type",
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "subscription",
                              "one_time"
                            ]
                          },
                          "subscription": {
                            "description": "The subscription product object",
                            "nullable": true,
                            "type": "object",
                            "required": [
                              "duration",
                              "grace_period_duration",
                              "trial_duration"
                            ],
                            "properties": {
                              "duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription in ISO-8601 standard",
                                "example": "P1M"
                              },
                              "grace_period_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                "example": "P3D"
                              },
                              "trial_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                "example": "P1W"
                              }
                            }
                          },
                          "created_at": {
                            "description": "The date when the product was created in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "app_id": {
                            "description": "The id of the app",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "app1a2b3c4"
                          },
                          "app": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "type",
                              "project_id"
                            ],
                            "properties": {
                              "id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "name": {
                                "description": "The name of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500
                              },
                              "created_at": {
                                "description": "The date when the app was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "type": {
                                "description": "The platform of the app",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "amazon",
                                  "app_store",
                                  "mac_app_store",
                                  "play_store",
                                  "stripe"
                                ],
                                "example": "amazon"
                              },
                              "project_id": {
                                "description": "The id of the project",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "proj1a2b3c4"
                              }
                            },
                            "description": "The app associated with the product",
                            "nullable": true
                          },
                          "display_name": {
                            "description": "The display name of the product",
                            "nullable": true,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Premium Monthly 2023"
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/products?starting_after=prodab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/products"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:products:read`."
      },
      "post": {
        "summary": "Create a product",
        "operationId": "create-product",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:products:read_write"
        ],
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "store_identifier",
                  "app_id",
                  "type"
                ],
                "properties": {
                  "store_identifier": {
                    "description": "The store identifier of the product.\n- For Apple App Store products this is the product ID of the subscription or in-app product.\n- For Google's Play Store, it should follow the format 'productId:basePlanId' for subscription products and SKU for one-time purchase products.\n- For Stripe, the product identifier that always starts with \"prod_\"\n- For Amazon, if it's a subscription, the term SKU of the subscription. If it's a one-time purchase, the SKU of the product.\n",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "example": "com.revenuecat.magicweather.monthly"
                  },
                  "app_id": {
                    "description": "The ID of the app",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "app1a2b3c4"
                  },
                  "type": {
                    "description": "The product type",
                    "nullable": false,
                    "type": "string",
                    "enum": [
                      "subscription",
                      "one_time"
                    ]
                  },
                  "display_name": {
                    "description": "The display name of the product",
                    "nullable": true,
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "Premium Monthly 2023"
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "App Store": {
                  "value": {
                    "store_identifier": "com.revenuecat.magicweather.monthly9.99",
                    "app_id": "app1a2b3c4",
                    "type": "subscription",
                    "display_name": "Premium Monthly 2023"
                  }
                },
                "Play Store Billing Client 4": {
                  "value": {
                    "store_identifier": "com.revenuecat.magicweather.monthly",
                    "app_id": "app1a2b3c4",
                    "type": "subscription",
                    "display_name": "Premium Monthly 2023"
                  }
                },
                "Stripe": {
                  "value": {
                    "store_identifier": "prod_LryUFGrmehs0tk",
                    "app_id": "app1a2b3c4",
                    "type": "subscription",
                    "display_name": "Premium Monthly 2023"
                  }
                },
                "Amazon": {
                  "value": {
                    "store_identifier": "com.mysubscription.weekly",
                    "app_id": "app1a2b3c4",
                    "type": "subscription",
                    "display_name": "Premium Monthly 2023"
                  }
                },
                "Play Store Subscription Billing Client 5": {
                  "value": {
                    "store_identifier": "mySubscription:basePlanId",
                    "app_id": "app1a2b3c4",
                    "type": "subscription",
                    "display_name": "Premium Monthly 2023"
                  }
                },
                "Play Store One-time Billing Client 5": {
                  "value": {
                    "store_identifier": "myProductSku",
                    "app_id": "app1a2b3c4",
                    "type": "one_time",
                    "display_name": "Premium Lifetime 2023"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. The product was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "store_identifier",
                    "type",
                    "created_at",
                    "app_id",
                    "object",
                    "display_name"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "product"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the product",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "prod1a2b3c4d5e"
                    },
                    "store_identifier": {
                      "description": "The store product identifier",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "rc_1w_199"
                    },
                    "type": {
                      "description": "The product type",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "subscription",
                        "one_time"
                      ]
                    },
                    "subscription": {
                      "description": "The subscription product object",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "duration",
                        "grace_period_duration",
                        "trial_duration"
                      ],
                      "properties": {
                        "duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription in ISO-8601 standard",
                          "example": "P1M"
                        },
                        "grace_period_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription's grace period in ISO-8601 standard",
                          "example": "P3D"
                        },
                        "trial_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subcription's trial period in ISO-8601 standard",
                          "example": "P1W"
                        }
                      }
                    },
                    "created_at": {
                      "description": "The date when the product was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "app_id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "app": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "type",
                        "project_id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The id of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "app1a2b3c4"
                        },
                        "name": {
                          "description": "The name of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1500
                        },
                        "created_at": {
                          "description": "The date when the app was created in ms since epoch",
                          "nullable": false,
                          "type": "integer",
                          "example": 1658399423658
                        },
                        "type": {
                          "description": "The platform of the app",
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "amazon",
                            "app_store",
                            "mac_app_store",
                            "play_store",
                            "stripe"
                          ],
                          "example": "amazon"
                        },
                        "project_id": {
                          "description": "The id of the project",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "proj1a2b3c4"
                        }
                      },
                      "description": "The app associated with the product",
                      "nullable": true
                    },
                    "display_name": {
                      "description": "The display name of the product",
                      "nullable": true,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium Monthly 2023"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:products:read_write`."
      }
    },
    "/projects/{project_id}/entitlements/{entitlement_id}": {
      "get": {
        "summary": "Get an entitlement",
        "operationId": "get-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read"
        ],
        "x-expandable-fields": [
          "product"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "product"
                ],
                "example": "product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "id",
                    "lookup_key",
                    "display_name",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "entitlement"
                      ],
                      "type": "string"
                    },
                    "project_id": {
                      "nullable": false,
                      "description": "ID of the project to which the entitlement belongs",
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "id": {
                      "description": "The id of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "entla1b2c3d4e5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "premium"
                    },
                    "display_name": {
                      "description": "The display name of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium"
                    },
                    "created_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the entitlement was created in ms since epoch",
                      "example": 1658399423658
                    },
                    "products": {
                      "description": "List of products attached to the entitlement",
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductsList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read`."
      },
      "post": {
        "summary": "Update an entitlement",
        "operationId": "update-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read_write"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "display_name"
                ],
                "properties": {
                  "display_name": {
                    "description": "The display name of the entitlement",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "Premium"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The entitlement was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "id",
                    "lookup_key",
                    "display_name",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "entitlement"
                      ],
                      "type": "string"
                    },
                    "project_id": {
                      "nullable": false,
                      "description": "ID of the project to which the entitlement belongs",
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "id": {
                      "description": "The id of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "entla1b2c3d4e5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "premium"
                    },
                    "display_name": {
                      "description": "The display name of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium"
                    },
                    "created_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the entitlement was created in ms since epoch",
                      "example": 1658399423658
                    },
                    "products": {
                      "description": "List of products attached to the entitlement",
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductsList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read_write`."
      },
      "delete": {
        "summary": "Delete an entitlement",
        "operationId": "delete-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read_write"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "object",
                    "id",
                    "deleted_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "The type of the deleted object",
                      "enum": [
                        "entitlement",
                        "offering",
                        "package",
                        "product",
                        "customer"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the deleted object",
                      "nullable": false,
                      "type": "string"
                    },
                    "deleted_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the object was deleted in ms since epoch",
                      "example": 1658399423658
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read_write`."
      }
    },
    "/projects/{project_id}/entitlements": {
      "get": {
        "summary": "Get a list of entitlements",
        "operationId": "list-entitlements",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read"
        ],
        "x-expandable-fields": [
          "items.product"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `items.product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "items.product"
                ],
                "example": "items.product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "EntitlementList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "project_id",
                          "id",
                          "lookup_key",
                          "display_name",
                          "created_at"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value.",
                            "enum": [
                              "entitlement"
                            ],
                            "type": "string"
                          },
                          "project_id": {
                            "nullable": false,
                            "description": "ID of the project to which the entitlement belongs",
                            "minLength": 1,
                            "maxLength": 20,
                            "type": "string",
                            "example": "proj1ab2c3d4"
                          },
                          "id": {
                            "description": "The id of the entitlement",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "entla1b2c3d4e5"
                          },
                          "lookup_key": {
                            "description": "A custom identifier of the entitlement",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "example": "premium"
                          },
                          "display_name": {
                            "description": "The display name of the entitlement",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Premium"
                          },
                          "created_at": {
                            "nullable": false,
                            "type": "integer",
                            "description": "The date when the entitlement was created in ms since epoch",
                            "example": 1658399423658
                          },
                          "products": {
                            "description": "List of products attached to the entitlement",
                            "nullable": true,
                            "required": [
                              "items",
                              "next_page",
                              "object",
                              "url"
                            ],
                            "title": "ProductsList",
                            "type": "object",
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "list"
                                ],
                                "type": "string"
                              },
                              "items": {
                                "description": "Details about each object.",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "store_identifier",
                                    "type",
                                    "created_at",
                                    "app_id",
                                    "object",
                                    "display_name"
                                  ],
                                  "properties": {
                                    "object": {
                                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                      "enum": [
                                        "product"
                                      ],
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The id of the product",
                                      "nullable": false,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "prod1a2b3c4d5e"
                                    },
                                    "store_identifier": {
                                      "description": "The store product identifier",
                                      "nullable": false,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "rc_1w_199"
                                    },
                                    "type": {
                                      "description": "The product type",
                                      "nullable": false,
                                      "type": "string",
                                      "enum": [
                                        "subscription",
                                        "one_time"
                                      ]
                                    },
                                    "subscription": {
                                      "description": "The subscription product object",
                                      "nullable": true,
                                      "type": "object",
                                      "required": [
                                        "duration",
                                        "grace_period_duration",
                                        "trial_duration"
                                      ],
                                      "properties": {
                                        "duration": {
                                          "type": "string",
                                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                          "nullable": true,
                                          "description": "The duration of the subscription in ISO-8601 standard",
                                          "example": "P1M"
                                        },
                                        "grace_period_duration": {
                                          "type": "string",
                                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                          "nullable": true,
                                          "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                          "example": "P3D"
                                        },
                                        "trial_duration": {
                                          "type": "string",
                                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                          "nullable": true,
                                          "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                          "example": "P1W"
                                        }
                                      }
                                    },
                                    "created_at": {
                                      "description": "The date when the product was created in ms since epoch",
                                      "nullable": false,
                                      "type": "integer",
                                      "example": 1658399423658
                                    },
                                    "app_id": {
                                      "description": "The id of the app",
                                      "nullable": false,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "app1a2b3c4"
                                    },
                                    "app": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "created_at",
                                        "type",
                                        "project_id"
                                      ],
                                      "properties": {
                                        "id": {
                                          "description": "The id of the app",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "app1a2b3c4"
                                        },
                                        "name": {
                                          "description": "The name of the app",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 1500
                                        },
                                        "created_at": {
                                          "description": "The date when the app was created in ms since epoch",
                                          "nullable": false,
                                          "type": "integer",
                                          "example": 1658399423658
                                        },
                                        "type": {
                                          "description": "The platform of the app",
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "amazon",
                                            "app_store",
                                            "mac_app_store",
                                            "play_store",
                                            "stripe"
                                          ],
                                          "example": "amazon"
                                        },
                                        "project_id": {
                                          "description": "The id of the project",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "proj1a2b3c4"
                                        }
                                      },
                                      "description": "The app associated with the product",
                                      "nullable": true
                                    },
                                    "display_name": {
                                      "description": "The display name of the product",
                                      "nullable": true,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 1500,
                                      "example": "Premium Monthly 2023"
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "next_page": {
                                "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                                "type": "string",
                                "nullable": true,
                                "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                              },
                              "url": {
                                "description": "The URL where this list can be accessed.",
                                "maxLength": 5000,
                                "type": "string",
                                "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's entitlements. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/entitlements?starting_after=entlab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/entitlements"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read`."
      },
      "post": {
        "summary": "Create an entitlement",
        "operationId": "create-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read_write"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "lookup_key",
                  "display_name"
                ],
                "properties": {
                  "lookup_key": {
                    "description": "The identifier of the entitlement",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "example": "premium"
                  },
                  "display_name": {
                    "description": "The display name of the entitlement",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "Premium access to all features"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. The entitlement was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "id",
                    "lookup_key",
                    "display_name",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "entitlement"
                      ],
                      "type": "string"
                    },
                    "project_id": {
                      "nullable": false,
                      "description": "ID of the project to which the entitlement belongs",
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "id": {
                      "description": "The id of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "entla1b2c3d4e5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "premium"
                    },
                    "display_name": {
                      "description": "The display name of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium"
                    },
                    "created_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the entitlement was created in ms since epoch",
                      "example": 1658399423658
                    },
                    "products": {
                      "description": "List of products attached to the entitlement",
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductsList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read_write`."
      }
    },
    "/projects/{project_id}/entitlements/{entitlement_id}/products": {
      "get": {
        "summary": "Get a list of products attached to a given entitlement",
        "operationId": "get-products-from-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProductsFromEntitlementList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "store_identifier",
                          "type",
                          "created_at",
                          "app_id",
                          "object",
                          "display_name"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                            "enum": [
                              "product"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the product",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "prod1a2b3c4d5e"
                          },
                          "store_identifier": {
                            "description": "The store product identifier",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "rc_1w_199"
                          },
                          "type": {
                            "description": "The product type",
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "subscription",
                              "one_time"
                            ]
                          },
                          "subscription": {
                            "description": "The subscription product object",
                            "nullable": true,
                            "type": "object",
                            "required": [
                              "duration",
                              "grace_period_duration",
                              "trial_duration"
                            ],
                            "properties": {
                              "duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription in ISO-8601 standard",
                                "example": "P1M"
                              },
                              "grace_period_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                "example": "P3D"
                              },
                              "trial_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                "example": "P1W"
                              }
                            }
                          },
                          "created_at": {
                            "description": "The date when the product was created in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "app_id": {
                            "description": "The id of the app",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "app1a2b3c4"
                          },
                          "app": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "type",
                              "project_id"
                            ],
                            "properties": {
                              "id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "name": {
                                "description": "The name of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500
                              },
                              "created_at": {
                                "description": "The date when the app was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "type": {
                                "description": "The platform of the app",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "amazon",
                                  "app_store",
                                  "mac_app_store",
                                  "play_store",
                                  "stripe"
                                ],
                                "example": "amazon"
                              },
                              "project_id": {
                                "description": "The id of the project",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "proj1a2b3c4"
                              }
                            },
                            "description": "The app associated with the product",
                            "nullable": true
                          },
                          "display_name": {
                            "description": "The display name of the product",
                            "nullable": true,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Premium Monthly 2023"
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the entitlement's products. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/entitlements/entla1b2c3d4e5/products?starting_after=prod1a2b3c4d5"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/entitlements/entla1b2c3d4e5/products"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read`."
      }
    },
    "/projects/{project_id}/entitlements/{entitlement_id}/actions/attach_products": {
      "post": {
        "summary": "Attach a set of products to an entitlement",
        "operationId": "attach-products-to-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read_write"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "product_ids"
                ],
                "properties": {
                  "product_ids": {
                    "description": "IDs of the products to be attached to the entitlement.",
                    "type": "array",
                    "minLength": 1,
                    "maxLength": 50,
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "example": "prod1a2b3c4d5e"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The products were attached to the entitlement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "id",
                    "lookup_key",
                    "display_name",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "entitlement"
                      ],
                      "type": "string"
                    },
                    "project_id": {
                      "nullable": false,
                      "description": "ID of the project to which the entitlement belongs",
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "id": {
                      "description": "The id of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "entla1b2c3d4e5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "premium"
                    },
                    "display_name": {
                      "description": "The display name of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium"
                    },
                    "created_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the entitlement was created in ms since epoch",
                      "example": 1658399423658
                    },
                    "products": {
                      "description": "List of products attached to the entitlement",
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductsList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read_write`."
      }
    },
    "/projects/{project_id}/entitlements/{entitlement_id}/actions/detach_products": {
      "post": {
        "summary": "Detach a set of product from an entitlement",
        "operationId": "detach-products-from-entitlement",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:entitlements:read_write"
        ],
        "tags": [
          "Entitlement"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "entitlement_id",
            "description": "ID of the entitlement",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "entla1b2c3d4e5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "product_ids"
                ],
                "properties": {
                  "product_ids": {
                    "description": "IDs of the products to be detached from the entitlement.",
                    "type": "array",
                    "minLength": 1,
                    "maxLength": 50,
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "example": "prod1a2b3c4d5e"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The products were detached from the entitlement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "id",
                    "lookup_key",
                    "display_name",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "entitlement"
                      ],
                      "type": "string"
                    },
                    "project_id": {
                      "nullable": false,
                      "description": "ID of the project to which the entitlement belongs",
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "id": {
                      "description": "The id of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "entla1b2c3d4e5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "premium"
                    },
                    "display_name": {
                      "description": "The display name of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium"
                    },
                    "created_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the entitlement was created in ms since epoch",
                      "example": 1658399423658
                    },
                    "products": {
                      "description": "List of products attached to the entitlement",
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductsList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:entitlements:read_write`."
      }
    },
    "/projects/{project_id}/offerings/{offering_id}": {
      "get": {
        "summary": "Get an offering",
        "operationId": "get-offering",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:offerings:read"
        ],
        "x-expandable-fields": [
          "package",
          "package.product"
        ],
        "tags": [
          "Offering"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "offering_id",
            "description": "ID of the offering",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "ofrnge1a2b3c4d5"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `package`, `package.product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "package",
                  "package.product"
                ],
                "example": "package"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "is_current",
                    "created_at",
                    "project_id"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "offering"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "ofrnge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "default"
                    },
                    "display_name": {
                      "description": "The display name of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "The standard set of packages"
                    },
                    "is_current": {
                      "description": "Indicates if the offering is the current offering",
                      "nullable": false,
                      "type": "boolean",
                      "example": true
                    },
                    "created_at": {
                      "description": "The date the offering was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "project_id": {
                      "description": "ID of the project to which the offering belongs",
                      "nullable": false,
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "metadata": {
                      "description": "Custom metadata of the offering",
                      "nullable": true,
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "color": "blue",
                        "call_to_action": "Subscribe Now!"
                      }
                    },
                    "packages": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "PackageList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "lookup_key",
                              "display_name",
                              "position",
                              "created_at"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value.",
                                "enum": [
                                  "package"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "pkge1a2b3c4d5"
                              },
                              "lookup_key": {
                                "description": "The lookup_key of the package",
                                "nullable": false,
                                "example": "monthly",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 200
                              },
                              "display_name": {
                                "description": "The display name of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Monthly discounted with 3-day trial"
                              },
                              "position": {
                                "description": "The position of the package within the offering",
                                "nullable": true,
                                "type": "integer",
                                "example": 1
                              },
                              "created_at": {
                                "description": "The date the package was created at in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "products": {
                                "nullable": true,
                                "required": [
                                  "items",
                                  "next_page",
                                  "object",
                                  "url"
                                ],
                                "title": "ProductList",
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "list"
                                    ],
                                    "type": "string"
                                  },
                                  "items": {
                                    "description": "Product association",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "product",
                                        "eligibility_criteria"
                                      ],
                                      "properties": {
                                        "product": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "store_identifier",
                                            "type",
                                            "created_at",
                                            "app_id",
                                            "object",
                                            "display_name"
                                          ],
                                          "properties": {
                                            "object": {
                                              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                              "enum": [
                                                "product"
                                              ],
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "The id of the product",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "prod1a2b3c4d5e"
                                            },
                                            "store_identifier": {
                                              "description": "The store product identifier",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "rc_1w_199"
                                            },
                                            "type": {
                                              "description": "The product type",
                                              "nullable": false,
                                              "type": "string",
                                              "enum": [
                                                "subscription",
                                                "one_time"
                                              ]
                                            },
                                            "subscription": {
                                              "description": "The subscription product object",
                                              "nullable": true,
                                              "type": "object",
                                              "required": [
                                                "duration",
                                                "grace_period_duration",
                                                "trial_duration"
                                              ],
                                              "properties": {
                                                "duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription in ISO-8601 standard",
                                                  "example": "P1M"
                                                },
                                                "grace_period_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                                  "example": "P3D"
                                                },
                                                "trial_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                                  "example": "P1W"
                                                }
                                              }
                                            },
                                            "created_at": {
                                              "description": "The date when the product was created in ms since epoch",
                                              "nullable": false,
                                              "type": "integer",
                                              "example": 1658399423658
                                            },
                                            "app_id": {
                                              "description": "The id of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "app1a2b3c4"
                                            },
                                            "app": {
                                              "type": "object",
                                              "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "type",
                                                "project_id"
                                              ],
                                              "properties": {
                                                "id": {
                                                  "description": "The id of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "app1a2b3c4"
                                                },
                                                "name": {
                                                  "description": "The name of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 1500
                                                },
                                                "created_at": {
                                                  "description": "The date when the app was created in ms since epoch",
                                                  "nullable": false,
                                                  "type": "integer",
                                                  "example": 1658399423658
                                                },
                                                "type": {
                                                  "description": "The platform of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "enum": [
                                                    "amazon",
                                                    "app_store",
                                                    "mac_app_store",
                                                    "play_store",
                                                    "stripe"
                                                  ],
                                                  "example": "amazon"
                                                },
                                                "project_id": {
                                                  "description": "The id of the project",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "proj1a2b3c4"
                                                }
                                              },
                                              "description": "The app associated with the product",
                                              "nullable": true
                                            },
                                            "display_name": {
                                              "description": "The display name of the product",
                                              "nullable": true,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 1500,
                                              "example": "Premium Monthly 2023"
                                            }
                                          },
                                          "nullable": false
                                        },
                                        "eligibility_criteria": {
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "all",
                                            "google_sdk_lt_6",
                                            "google_sdk_ge_6"
                                          ]
                                        }
                                      }
                                    },
                                    "type": "array"
                                  },
                                  "next_page": {
                                    "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                    "type": "string",
                                    "nullable": true,
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                                  },
                                  "url": {
                                    "description": "The URL where this list can be accessed.",
                                    "maxLength": 5000,
                                    "type": "string",
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                                  }
                                }
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:offerings:read`."
      },
      "post": {
        "summary": "Update an offering",
        "operationId": "update-offering",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:offerings:read_write"
        ],
        "tags": [
          "Offering"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "offering_id",
            "description": "ID of the offering",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "ofrnge1a2b3c4d5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "description": "The display name of the offering",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "premium access to features"
                  },
                  "is_current": {
                    "description": "Indicates if the offering is the current offering",
                    "type": "boolean",
                    "example": true
                  },
                  "metadata": {
                    "description": "Custom metadata of the offering",
                    "nullable": true,
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": {
                      "color": "blue",
                      "call_to_action": "Subscribe Now!"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The offering was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "is_current",
                    "created_at",
                    "project_id"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "offering"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "ofrnge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "default"
                    },
                    "display_name": {
                      "description": "The display name of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "The standard set of packages"
                    },
                    "is_current": {
                      "description": "Indicates if the offering is the current offering",
                      "nullable": false,
                      "type": "boolean",
                      "example": true
                    },
                    "created_at": {
                      "description": "The date the offering was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "project_id": {
                      "description": "ID of the project to which the offering belongs",
                      "nullable": false,
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "metadata": {
                      "description": "Custom metadata of the offering",
                      "nullable": true,
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "color": "blue",
                        "call_to_action": "Subscribe Now!"
                      }
                    },
                    "packages": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "PackageList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "lookup_key",
                              "display_name",
                              "position",
                              "created_at"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value.",
                                "enum": [
                                  "package"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "pkge1a2b3c4d5"
                              },
                              "lookup_key": {
                                "description": "The lookup_key of the package",
                                "nullable": false,
                                "example": "monthly",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 200
                              },
                              "display_name": {
                                "description": "The display name of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Monthly discounted with 3-day trial"
                              },
                              "position": {
                                "description": "The position of the package within the offering",
                                "nullable": true,
                                "type": "integer",
                                "example": 1
                              },
                              "created_at": {
                                "description": "The date the package was created at in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "products": {
                                "nullable": true,
                                "required": [
                                  "items",
                                  "next_page",
                                  "object",
                                  "url"
                                ],
                                "title": "ProductList",
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "list"
                                    ],
                                    "type": "string"
                                  },
                                  "items": {
                                    "description": "Product association",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "product",
                                        "eligibility_criteria"
                                      ],
                                      "properties": {
                                        "product": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "store_identifier",
                                            "type",
                                            "created_at",
                                            "app_id",
                                            "object",
                                            "display_name"
                                          ],
                                          "properties": {
                                            "object": {
                                              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                              "enum": [
                                                "product"
                                              ],
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "The id of the product",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "prod1a2b3c4d5e"
                                            },
                                            "store_identifier": {
                                              "description": "The store product identifier",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "rc_1w_199"
                                            },
                                            "type": {
                                              "description": "The product type",
                                              "nullable": false,
                                              "type": "string",
                                              "enum": [
                                                "subscription",
                                                "one_time"
                                              ]
                                            },
                                            "subscription": {
                                              "description": "The subscription product object",
                                              "nullable": true,
                                              "type": "object",
                                              "required": [
                                                "duration",
                                                "grace_period_duration",
                                                "trial_duration"
                                              ],
                                              "properties": {
                                                "duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription in ISO-8601 standard",
                                                  "example": "P1M"
                                                },
                                                "grace_period_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                                  "example": "P3D"
                                                },
                                                "trial_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                                  "example": "P1W"
                                                }
                                              }
                                            },
                                            "created_at": {
                                              "description": "The date when the product was created in ms since epoch",
                                              "nullable": false,
                                              "type": "integer",
                                              "example": 1658399423658
                                            },
                                            "app_id": {
                                              "description": "The id of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "app1a2b3c4"
                                            },
                                            "app": {
                                              "type": "object",
                                              "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "type",
                                                "project_id"
                                              ],
                                              "properties": {
                                                "id": {
                                                  "description": "The id of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "app1a2b3c4"
                                                },
                                                "name": {
                                                  "description": "The name of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 1500
                                                },
                                                "created_at": {
                                                  "description": "The date when the app was created in ms since epoch",
                                                  "nullable": false,
                                                  "type": "integer",
                                                  "example": 1658399423658
                                                },
                                                "type": {
                                                  "description": "The platform of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "enum": [
                                                    "amazon",
                                                    "app_store",
                                                    "mac_app_store",
                                                    "play_store",
                                                    "stripe"
                                                  ],
                                                  "example": "amazon"
                                                },
                                                "project_id": {
                                                  "description": "The id of the project",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "proj1a2b3c4"
                                                }
                                              },
                                              "description": "The app associated with the product",
                                              "nullable": true
                                            },
                                            "display_name": {
                                              "description": "The display name of the product",
                                              "nullable": true,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 1500,
                                              "example": "Premium Monthly 2023"
                                            }
                                          },
                                          "nullable": false
                                        },
                                        "eligibility_criteria": {
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "all",
                                            "google_sdk_lt_6",
                                            "google_sdk_ge_6"
                                          ]
                                        }
                                      }
                                    },
                                    "type": "array"
                                  },
                                  "next_page": {
                                    "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                    "type": "string",
                                    "nullable": true,
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                                  },
                                  "url": {
                                    "description": "The URL where this list can be accessed.",
                                    "maxLength": 5000,
                                    "type": "string",
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                                  }
                                }
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:offerings:read_write`."
      },
      "delete": {
        "summary": "Delete an offering and its attached packages",
        "operationId": "delete-offering",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:offerings:read_write"
        ],
        "tags": [
          "Offering"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "offering_id",
            "description": "ID of the offering",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "ofrnge1a2b3c4d5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "object",
                    "id",
                    "deleted_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "The type of the deleted object",
                      "enum": [
                        "entitlement",
                        "offering",
                        "package",
                        "product",
                        "customer"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the deleted object",
                      "nullable": false,
                      "type": "string"
                    },
                    "deleted_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the object was deleted in ms since epoch",
                      "example": 1658399423658
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:offerings:read_write`."
      }
    },
    "/projects/{project_id}/offerings": {
      "get": {
        "summary": "Get a list of offerings",
        "operationId": "list-offerings",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:offerings:read"
        ],
        "x-expandable-fields": [
          "items.package",
          "items.package.product"
        ],
        "tags": [
          "Offering"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `items.package`, `items.package.product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "items.package",
                  "items.package.product"
                ],
                "example": "items.package"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "OfferingList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "lookup_key",
                          "display_name",
                          "is_current",
                          "created_at",
                          "project_id"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value.",
                            "enum": [
                              "offering"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the offering",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "ofrnge1a2b3c4d5"
                          },
                          "lookup_key": {
                            "description": "A custom identifier of the entitlement",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "example": "default"
                          },
                          "display_name": {
                            "description": "The display name of the offering",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "The standard set of packages"
                          },
                          "is_current": {
                            "description": "Indicates if the offering is the current offering",
                            "nullable": false,
                            "type": "boolean",
                            "example": true
                          },
                          "created_at": {
                            "description": "The date the offering was created at in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "project_id": {
                            "description": "ID of the project to which the offering belongs",
                            "nullable": false,
                            "minLength": 1,
                            "maxLength": 20,
                            "type": "string",
                            "example": "proj1ab2c3d4"
                          },
                          "metadata": {
                            "description": "Custom metadata of the offering",
                            "nullable": true,
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "example": {
                              "color": "blue",
                              "call_to_action": "Subscribe Now!"
                            }
                          },
                          "packages": {
                            "nullable": true,
                            "required": [
                              "items",
                              "next_page",
                              "object",
                              "url"
                            ],
                            "title": "PackageList",
                            "type": "object",
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "list"
                                ],
                                "type": "string"
                              },
                              "items": {
                                "description": "Details about each object.",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "lookup_key",
                                    "display_name",
                                    "position",
                                    "created_at"
                                  ],
                                  "properties": {
                                    "object": {
                                      "description": "String representing the object's type. Objects of the same type share the same value.",
                                      "enum": [
                                        "package"
                                      ],
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The id of the package",
                                      "nullable": false,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "pkge1a2b3c4d5"
                                    },
                                    "lookup_key": {
                                      "description": "The lookup_key of the package",
                                      "nullable": false,
                                      "example": "monthly",
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 200
                                    },
                                    "display_name": {
                                      "description": "The display name of the package",
                                      "nullable": false,
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 1500,
                                      "example": "Monthly discounted with 3-day trial"
                                    },
                                    "position": {
                                      "description": "The position of the package within the offering",
                                      "nullable": true,
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "created_at": {
                                      "description": "The date the package was created at in ms since epoch",
                                      "nullable": false,
                                      "type": "integer",
                                      "example": 1658399423658
                                    },
                                    "products": {
                                      "nullable": true,
                                      "required": [
                                        "items",
                                        "next_page",
                                        "object",
                                        "url"
                                      ],
                                      "title": "ProductList",
                                      "properties": {
                                        "object": {
                                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                          "enum": [
                                            "list"
                                          ],
                                          "type": "string"
                                        },
                                        "items": {
                                          "description": "Product association",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "product",
                                              "eligibility_criteria"
                                            ],
                                            "properties": {
                                              "product": {
                                                "type": "object",
                                                "required": [
                                                  "id",
                                                  "store_identifier",
                                                  "type",
                                                  "created_at",
                                                  "app_id",
                                                  "object",
                                                  "display_name"
                                                ],
                                                "properties": {
                                                  "object": {
                                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                                    "enum": [
                                                      "product"
                                                    ],
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "description": "The id of the product",
                                                    "nullable": false,
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 255,
                                                    "example": "prod1a2b3c4d5e"
                                                  },
                                                  "store_identifier": {
                                                    "description": "The store product identifier",
                                                    "nullable": false,
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 255,
                                                    "example": "rc_1w_199"
                                                  },
                                                  "type": {
                                                    "description": "The product type",
                                                    "nullable": false,
                                                    "type": "string",
                                                    "enum": [
                                                      "subscription",
                                                      "one_time"
                                                    ]
                                                  },
                                                  "subscription": {
                                                    "description": "The subscription product object",
                                                    "nullable": true,
                                                    "type": "object",
                                                    "required": [
                                                      "duration",
                                                      "grace_period_duration",
                                                      "trial_duration"
                                                    ],
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                        "nullable": true,
                                                        "description": "The duration of the subscription in ISO-8601 standard",
                                                        "example": "P1M"
                                                      },
                                                      "grace_period_duration": {
                                                        "type": "string",
                                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                        "nullable": true,
                                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                                        "example": "P3D"
                                                      },
                                                      "trial_duration": {
                                                        "type": "string",
                                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                        "nullable": true,
                                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                                        "example": "P1W"
                                                      }
                                                    }
                                                  },
                                                  "created_at": {
                                                    "description": "The date when the product was created in ms since epoch",
                                                    "nullable": false,
                                                    "type": "integer",
                                                    "example": 1658399423658
                                                  },
                                                  "app_id": {
                                                    "description": "The id of the app",
                                                    "nullable": false,
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 255,
                                                    "example": "app1a2b3c4"
                                                  },
                                                  "app": {
                                                    "type": "object",
                                                    "required": [
                                                      "id",
                                                      "name",
                                                      "created_at",
                                                      "type",
                                                      "project_id"
                                                    ],
                                                    "properties": {
                                                      "id": {
                                                        "description": "The id of the app",
                                                        "nullable": false,
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 255,
                                                        "example": "app1a2b3c4"
                                                      },
                                                      "name": {
                                                        "description": "The name of the app",
                                                        "nullable": false,
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 1500
                                                      },
                                                      "created_at": {
                                                        "description": "The date when the app was created in ms since epoch",
                                                        "nullable": false,
                                                        "type": "integer",
                                                        "example": 1658399423658
                                                      },
                                                      "type": {
                                                        "description": "The platform of the app",
                                                        "nullable": false,
                                                        "type": "string",
                                                        "enum": [
                                                          "amazon",
                                                          "app_store",
                                                          "mac_app_store",
                                                          "play_store",
                                                          "stripe"
                                                        ],
                                                        "example": "amazon"
                                                      },
                                                      "project_id": {
                                                        "description": "The id of the project",
                                                        "nullable": false,
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 255,
                                                        "example": "proj1a2b3c4"
                                                      }
                                                    },
                                                    "description": "The app associated with the product",
                                                    "nullable": true
                                                  },
                                                  "display_name": {
                                                    "description": "The display name of the product",
                                                    "nullable": true,
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 1500,
                                                    "example": "Premium Monthly 2023"
                                                  }
                                                },
                                                "nullable": false
                                              },
                                              "eligibility_criteria": {
                                                "nullable": false,
                                                "type": "string",
                                                "enum": [
                                                  "all",
                                                  "google_sdk_lt_6",
                                                  "google_sdk_ge_6"
                                                ]
                                              }
                                            }
                                          },
                                          "type": "array"
                                        },
                                        "next_page": {
                                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                          "type": "string",
                                          "nullable": true,
                                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                                        },
                                        "url": {
                                          "description": "The URL where this list can be accessed.",
                                          "maxLength": 5000,
                                          "type": "string",
                                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                                        }
                                      }
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "next_page": {
                                "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                                "type": "string",
                                "nullable": true,
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                              },
                              "url": {
                                "description": "The URL where this list can be accessed.",
                                "maxLength": 5000,
                                "type": "string",
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's offerings. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/offerings?starting_after=ofrngeab21da"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/offerings"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:offerings:read`."
      },
      "post": {
        "summary": "Create an offering",
        "operationId": "create-offering",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:offerings:read_write"
        ],
        "tags": [
          "Offering"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "lookup_key",
                  "display_name"
                ],
                "properties": {
                  "lookup_key": {
                    "description": "The custom identifier of the offering",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "example": "default"
                  },
                  "display_name": {
                    "description": "The display_name of the offering",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "The standard set of packages"
                  },
                  "metadata": {
                    "description": "Custom metadata of the offering",
                    "nullable": true,
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": {
                      "color": "blue",
                      "call_to_action": "Subscribe Now!"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. The offering was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "is_current",
                    "created_at",
                    "project_id"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "offering"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "ofrnge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "A custom identifier of the entitlement",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "example": "default"
                    },
                    "display_name": {
                      "description": "The display name of the offering",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "The standard set of packages"
                    },
                    "is_current": {
                      "description": "Indicates if the offering is the current offering",
                      "nullable": false,
                      "type": "boolean",
                      "example": true
                    },
                    "created_at": {
                      "description": "The date the offering was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "project_id": {
                      "description": "ID of the project to which the offering belongs",
                      "nullable": false,
                      "minLength": 1,
                      "maxLength": 20,
                      "type": "string",
                      "example": "proj1ab2c3d4"
                    },
                    "metadata": {
                      "description": "Custom metadata of the offering",
                      "nullable": true,
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "color": "blue",
                        "call_to_action": "Subscribe Now!"
                      }
                    },
                    "packages": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "PackageList",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Details about each object.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "lookup_key",
                              "display_name",
                              "position",
                              "created_at"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value.",
                                "enum": [
                                  "package"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "pkge1a2b3c4d5"
                              },
                              "lookup_key": {
                                "description": "The lookup_key of the package",
                                "nullable": false,
                                "example": "monthly",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 200
                              },
                              "display_name": {
                                "description": "The display name of the package",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Monthly discounted with 3-day trial"
                              },
                              "position": {
                                "description": "The position of the package within the offering",
                                "nullable": true,
                                "type": "integer",
                                "example": 1
                              },
                              "created_at": {
                                "description": "The date the package was created at in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "products": {
                                "nullable": true,
                                "required": [
                                  "items",
                                  "next_page",
                                  "object",
                                  "url"
                                ],
                                "title": "ProductList",
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "list"
                                    ],
                                    "type": "string"
                                  },
                                  "items": {
                                    "description": "Product association",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "product",
                                        "eligibility_criteria"
                                      ],
                                      "properties": {
                                        "product": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "store_identifier",
                                            "type",
                                            "created_at",
                                            "app_id",
                                            "object",
                                            "display_name"
                                          ],
                                          "properties": {
                                            "object": {
                                              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                              "enum": [
                                                "product"
                                              ],
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "The id of the product",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "prod1a2b3c4d5e"
                                            },
                                            "store_identifier": {
                                              "description": "The store product identifier",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "rc_1w_199"
                                            },
                                            "type": {
                                              "description": "The product type",
                                              "nullable": false,
                                              "type": "string",
                                              "enum": [
                                                "subscription",
                                                "one_time"
                                              ]
                                            },
                                            "subscription": {
                                              "description": "The subscription product object",
                                              "nullable": true,
                                              "type": "object",
                                              "required": [
                                                "duration",
                                                "grace_period_duration",
                                                "trial_duration"
                                              ],
                                              "properties": {
                                                "duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription in ISO-8601 standard",
                                                  "example": "P1M"
                                                },
                                                "grace_period_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                                  "example": "P3D"
                                                },
                                                "trial_duration": {
                                                  "type": "string",
                                                  "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                                  "nullable": true,
                                                  "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                                  "example": "P1W"
                                                }
                                              }
                                            },
                                            "created_at": {
                                              "description": "The date when the product was created in ms since epoch",
                                              "nullable": false,
                                              "type": "integer",
                                              "example": 1658399423658
                                            },
                                            "app_id": {
                                              "description": "The id of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "app1a2b3c4"
                                            },
                                            "app": {
                                              "type": "object",
                                              "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "type",
                                                "project_id"
                                              ],
                                              "properties": {
                                                "id": {
                                                  "description": "The id of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "app1a2b3c4"
                                                },
                                                "name": {
                                                  "description": "The name of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 1500
                                                },
                                                "created_at": {
                                                  "description": "The date when the app was created in ms since epoch",
                                                  "nullable": false,
                                                  "type": "integer",
                                                  "example": 1658399423658
                                                },
                                                "type": {
                                                  "description": "The platform of the app",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "enum": [
                                                    "amazon",
                                                    "app_store",
                                                    "mac_app_store",
                                                    "play_store",
                                                    "stripe"
                                                  ],
                                                  "example": "amazon"
                                                },
                                                "project_id": {
                                                  "description": "The id of the project",
                                                  "nullable": false,
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "maxLength": 255,
                                                  "example": "proj1a2b3c4"
                                                }
                                              },
                                              "description": "The app associated with the product",
                                              "nullable": true
                                            },
                                            "display_name": {
                                              "description": "The display name of the product",
                                              "nullable": true,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 1500,
                                              "example": "Premium Monthly 2023"
                                            }
                                          },
                                          "nullable": false
                                        },
                                        "eligibility_criteria": {
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "all",
                                            "google_sdk_lt_6",
                                            "google_sdk_ge_6"
                                          ]
                                        }
                                      }
                                    },
                                    "type": "array"
                                  },
                                  "next_page": {
                                    "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                    "type": "string",
                                    "nullable": true,
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                                  },
                                  "url": {
                                    "description": "The URL where this list can be accessed.",
                                    "maxLength": 5000,
                                    "type": "string",
                                    "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                                  }
                                }
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:offerings:read_write`."
      }
    },
    "/projects/{project_id}/offerings/{offering_id}/packages": {
      "get": {
        "summary": "Get a list of packages in an offering",
        "operationId": "list-packages",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read"
        ],
        "x-expandable-fields": [
          "items.product"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "offering_id",
            "description": "ID of the offering",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "ofrnge1a2b3c4d5"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `items.product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "items.product"
                ],
                "example": "items.product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "PackageList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "lookup_key",
                          "display_name",
                          "position",
                          "created_at"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value.",
                            "enum": [
                              "package"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the package",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "pkge1a2b3c4d5"
                          },
                          "lookup_key": {
                            "description": "The lookup_key of the package",
                            "nullable": false,
                            "example": "monthly",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200
                          },
                          "display_name": {
                            "description": "The display name of the package",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Monthly discounted with 3-day trial"
                          },
                          "position": {
                            "description": "The position of the package within the offering",
                            "nullable": true,
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "description": "The date the package was created at in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "products": {
                            "nullable": true,
                            "required": [
                              "items",
                              "next_page",
                              "object",
                              "url"
                            ],
                            "title": "ProductList",
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "list"
                                ],
                                "type": "string"
                              },
                              "items": {
                                "description": "Product association",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "product",
                                    "eligibility_criteria"
                                  ],
                                  "properties": {
                                    "product": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "store_identifier",
                                        "type",
                                        "created_at",
                                        "app_id",
                                        "object",
                                        "display_name"
                                      ],
                                      "properties": {
                                        "object": {
                                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                          "enum": [
                                            "product"
                                          ],
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "The id of the product",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "prod1a2b3c4d5e"
                                        },
                                        "store_identifier": {
                                          "description": "The store product identifier",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "rc_1w_199"
                                        },
                                        "type": {
                                          "description": "The product type",
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "subscription",
                                            "one_time"
                                          ]
                                        },
                                        "subscription": {
                                          "description": "The subscription product object",
                                          "nullable": true,
                                          "type": "object",
                                          "required": [
                                            "duration",
                                            "grace_period_duration",
                                            "trial_duration"
                                          ],
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subscription in ISO-8601 standard",
                                              "example": "P1M"
                                            },
                                            "grace_period_duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                              "example": "P3D"
                                            },
                                            "trial_duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                              "example": "P1W"
                                            }
                                          }
                                        },
                                        "created_at": {
                                          "description": "The date when the product was created in ms since epoch",
                                          "nullable": false,
                                          "type": "integer",
                                          "example": 1658399423658
                                        },
                                        "app_id": {
                                          "description": "The id of the app",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "app1a2b3c4"
                                        },
                                        "app": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "created_at",
                                            "type",
                                            "project_id"
                                          ],
                                          "properties": {
                                            "id": {
                                              "description": "The id of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "app1a2b3c4"
                                            },
                                            "name": {
                                              "description": "The name of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 1500
                                            },
                                            "created_at": {
                                              "description": "The date when the app was created in ms since epoch",
                                              "nullable": false,
                                              "type": "integer",
                                              "example": 1658399423658
                                            },
                                            "type": {
                                              "description": "The platform of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "enum": [
                                                "amazon",
                                                "app_store",
                                                "mac_app_store",
                                                "play_store",
                                                "stripe"
                                              ],
                                              "example": "amazon"
                                            },
                                            "project_id": {
                                              "description": "The id of the project",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "proj1a2b3c4"
                                            }
                                          },
                                          "description": "The app associated with the product",
                                          "nullable": true
                                        },
                                        "display_name": {
                                          "description": "The display name of the product",
                                          "nullable": true,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 1500,
                                          "example": "Premium Monthly 2023"
                                        }
                                      },
                                      "nullable": false
                                    },
                                    "eligibility_criteria": {
                                      "nullable": false,
                                      "type": "string",
                                      "enum": [
                                        "all",
                                        "google_sdk_lt_6",
                                        "google_sdk_ge_6"
                                      ]
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "next_page": {
                                "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                "type": "string",
                                "nullable": true,
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                              },
                              "url": {
                                "description": "The URL where this list can be accessed.",
                                "maxLength": 5000,
                                "type": "string",
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's packages. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read`."
      },
      "post": {
        "summary": "Create a package",
        "operationId": "create-packages",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read_write"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "offering_id",
            "description": "ID of the offering",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "ofrnge1a2b3c4d5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "lookup_key",
                  "display_name"
                ],
                "properties": {
                  "lookup_key": {
                    "description": "The lookup_key of the package",
                    "nullable": false,
                    "example": "monthly",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200
                  },
                  "display_name": {
                    "description": "The display name of the package",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "monthly with one-week trial"
                  },
                  "position": {
                    "description": "The position of the package in the offering",
                    "type": "integer",
                    "example": 1
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. The package was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read_write`."
      }
    },
    "/projects/{project_id}/packages/{package_id}": {
      "get": {
        "summary": "Get a package",
        "operationId": "get-package",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read"
        ],
        "x-expandable-fields": [
          "product"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Specifies which fields in the response should be expanded. Accepted values are: `product`.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 5000,
                "minLength": 1,
                "type": "string",
                "enum": [
                  "product"
                ],
                "example": "product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read`."
      },
      "post": {
        "summary": "Update a package",
        "operationId": "update-package",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read_write"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "description": "The display name of the package",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500,
                    "example": "monthly with one-week trial"
                  },
                  "position": {
                    "description": "The position of the package within the offering",
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The package was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read_write`."
      },
      "delete": {
        "summary": "Delete a package",
        "operationId": "delete-package-from-offering",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read_write"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "object",
                    "id",
                    "deleted_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "The type of the deleted object",
                      "enum": [
                        "entitlement",
                        "offering",
                        "package",
                        "product",
                        "customer"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The ID of the deleted object",
                      "nullable": false,
                      "type": "string"
                    },
                    "deleted_at": {
                      "nullable": false,
                      "type": "integer",
                      "description": "The date when the object was deleted in ms since epoch",
                      "example": 1658399423658
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read_write`."
      }
    },
    "/projects/{project_id}/packages/{package_id}/products": {
      "get": {
        "summary": "Get a list of products attached to a given package of an offering",
        "operationId": "get-products-from-package",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ent12354"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProductsFromPackageList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object",
                      "items": {
                        "type": "object",
                        "required": [
                          "product",
                          "eligibility_criteria"
                        ],
                        "properties": {
                          "product": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            },
                            "nullable": false
                          },
                          "eligibility_criteria": {
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "all",
                              "google_sdk_lt_6",
                              "google_sdk_ge_6"
                            ]
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the entitlement's products. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/packages/pkge1a2b3c4d5/products?starting_after=prod1a2b3c4d5"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/packages/pkge1a2b3c4d5/products"
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read`."
      }
    },
    "/projects/{project_id}/packages/{package_id}/actions/attach_products": {
      "post": {
        "summary": "Attach a set of products to a package",
        "operationId": "attach-products-to-package",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read_write"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "products"
                ],
                "properties": {
                  "products": {
                    "description": "Product association list",
                    "type": "array",
                    "minLength": 1,
                    "maxLength": 50,
                    "items": {
                      "type": "object",
                      "required": [
                        "product_id",
                        "eligibility_criteria"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "maxLength": 255,
                          "minLength": 1,
                          "nullable": false
                        },
                        "eligibility_criteria": {
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "all",
                            "google_sdk_lt_6",
                            "google_sdk_ge_6"
                          ]
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "Single product for package (applies to any store)": {
                  "value": {
                    "products": [
                      {
                        "product_id": "prod1a2b3c4d5e",
                        "eligibility_criteria": "all"
                      }
                    ]
                  }
                },
                "Play Store with different products depending on SDK version (SDK v6+ and SDK <v5) for one package": {
                  "value": {
                    "products": [
                      {
                        "product_id": "prod1a2b3c4d5e",
                        "eligibility_criteria": "google_sdk_lt_6"
                      },
                      {
                        "product_id": "prod445abb3188",
                        "eligibility_criteria": "google_sdk_ge_6"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The products were attached to the package.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read_write`."
      }
    },
    "/projects/{project_id}/packages/{package_id}/actions/detach_products": {
      "post": {
        "summary": "Detach a set of products from a package",
        "operationId": "detach-products-from-package",
        "x-revenuecat-rate-limiting-domain": "project_configuration",
        "x-scopes": [
          "project_configuration:packages:read_write"
        ],
        "tags": [
          "Package"
        ],
        "parameters": [
          {
            "name": "project_id",
            "description": "ID of the project",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255,
              "example": "proj1ab2c3d4"
            }
          },
          {
            "name": "package_id",
            "description": "ID of the package",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "example": "pkge1a2b3c4d5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "product_ids"
                ],
                "properties": {
                  "product_ids": {
                    "description": "IDs of the products to detach from the package",
                    "type": "array",
                    "minLength": 1,
                    "maxLength": 50,
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "example": "prod1a2b3c4d5e"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "parameter_error",
                            "invalid_request"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "param": "customer_id",
                      "message": "id is too long",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "invalid_request": {
                    "value": {
                      "type": "invalid_request",
                      "message": "Content-Type not application/json",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/invalid-request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authentication_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authentication_error",
                    "message": "Invalid API key",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authentication-error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "authorization_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "authorization_error",
                    "message": "You're not authorized to access this resource",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/authorization-error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_missing"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_missing",
                    "message": "Resource not found",
                    "retryable": false,
                    "doc_url": "https://errors.rev.cat/resource-missing"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_already_exists",
                            "idempotency_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "resource_already_exists": {
                    "value": {
                      "type": "resource_already_exists",
                      "message": "Name is already taken",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/resource-already-exists"
                    }
                  },
                  "idempotency_error": {
                    "value": {
                      "type": "idempotency_error",
                      "message": "Idempotency key already used for a different request",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/idempotency-error"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity_error",
                            "parameter_error",
                            "store_error"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unprocessable_entity": {
                    "value": {
                      "type": "unprocessable_entity_error",
                      "message": "Cannot delete a product that has purchases",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                    }
                  },
                  "parameter_error": {
                    "value": {
                      "type": "parameter_error",
                      "message": "Date must in the future",
                      "retryable": false,
                      "doc_url": "https://errors.rev.cat/parameter-error"
                    }
                  },
                  "store_error": {
                    "value": {
                      "type": "store_error",
                      "message": "There was a problem on the App Store",
                      "retryable": true,
                      "doc_url": "https://errors.rev.cat/store-error",
                      "backoff_ms": 1000
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "resource_locked_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "resource_locked_error",
                    "message": "The resource is currently being modified by a concurrent request",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/resource-locked-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "429": {
            "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
            "headers": {
              "RevenueCat-Rate-Limit-Current-Usage": {
                "required": true,
                "description": "The current number of requests used for the current limit (including the current request).",
                "schema": {
                  "type": "integer"
                },
                "example": 25
              },
              "RevenueCat-Rate-Limit-Current-Limit": {
                "required": true,
                "description": "The rate limit for this endpoint, expressed in requests per minute.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
                "schema": {
                  "type": "integer"
                },
                "example": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "rate_limit_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "rate_limit_error",
                    "message": "Rate limit exceeded",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/rate-limit-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "message",
                        "retryable"
                      ],
                      "properties": {
                        "type": {
                          "description": "The error type",
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "parameter_error",
                            "resource_already_exists",
                            "resource_missing",
                            "idempotency_error",
                            "rate_limit_error",
                            "authentication_error",
                            "authorization_error",
                            "store_error",
                            "server_error",
                            "resource_locked_error",
                            "unprocessable_entity_error",
                            "invalid_request"
                          ],
                          "example": "parameter_error"
                        },
                        "param": {
                          "description": "If the error is parameter-specific, the parameter related to the error",
                          "type": "string",
                          "nullable": true,
                          "example": "customer_id"
                        },
                        "doc_url": {
                          "description": "A URL to more information about the error reported",
                          "type": "string",
                          "nullable": false,
                          "example": "https://errors.rev.cat/parameter-error"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the reason of the error",
                          "nullable": false,
                          "example": "id shouldn't be longer than 1,500 characters"
                        },
                        "retryable": {
                          "description": "Indicates if the error is retryable or not",
                          "type": "boolean",
                          "nullable": false,
                          "example": false
                        },
                        "backoff_ms": {
                          "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "server_error"
                          ]
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "server_error",
                    "message": "There was an internal server error",
                    "retryable": true,
                    "doc_url": "https://errors.rev.cat/server-error",
                    "backoff_ms": 1000
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint requires the following permission(s): `project_configuration:packages:read_write`."
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication. Allowed headers -- Authorization: Bearer <api_key>",
        "scheme": "bearer",
        "type": "http"
      }
    },
    "schemas": {
      "App": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "project_id"
        ],
        "properties": {
          "id": {
            "description": "The id of the app",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "app1a2b3c4"
          },
          "name": {
            "description": "The name of the app",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 1500
          },
          "created_at": {
            "description": "The date when the app was created in ms since epoch",
            "nullable": false,
            "type": "integer",
            "example": 1658399423658
          },
          "type": {
            "description": "The platform of the app",
            "nullable": false,
            "type": "string",
            "enum": [
              "amazon",
              "app_store",
              "mac_app_store",
              "play_store",
              "stripe"
            ],
            "example": "amazon"
          },
          "project_id": {
            "description": "The id of the project",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "proj1a2b3c4"
          }
        }
      },
      "DeletedObject": {
        "type": "object",
        "required": [
          "object",
          "id",
          "deleted_at"
        ],
        "properties": {
          "object": {
            "description": "The type of the deleted object",
            "enum": [
              "entitlement",
              "offering",
              "package",
              "product",
              "customer"
            ],
            "type": "string"
          },
          "id": {
            "description": "The ID of the deleted object",
            "nullable": false,
            "type": "string"
          },
          "deleted_at": {
            "nullable": false,
            "type": "integer",
            "description": "The date when the object was deleted in ms since epoch",
            "example": 1658399423658
          }
        }
      },
      "EligibilityCriteria": {
        "type": "string",
        "nullable": false,
        "enum": [
          "all",
          "google_sdk_lt_6",
          "google_sdk_ge_6"
        ]
      },
      "Entitlement": {
        "type": "object",
        "required": [
          "project_id",
          "id",
          "lookup_key",
          "display_name",
          "created_at"
        ],
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "entitlement"
            ],
            "type": "string"
          },
          "project_id": {
            "nullable": false,
            "description": "ID of the project to which the entitlement belongs",
            "minLength": 1,
            "maxLength": 20,
            "type": "string",
            "example": "proj1ab2c3d4"
          },
          "id": {
            "description": "The id of the entitlement",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "entla1b2c3d4e5"
          },
          "lookup_key": {
            "description": "A custom identifier of the entitlement",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "example": "premium"
          },
          "display_name": {
            "description": "The display name of the entitlement",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 1500,
            "example": "Premium"
          },
          "created_at": {
            "nullable": false,
            "type": "integer",
            "description": "The date when the entitlement was created in ms since epoch",
            "example": 1658399423658
          },
          "products": {
            "description": "List of products attached to the entitlement",
            "nullable": true,
            "required": [
              "items",
              "next_page",
              "object",
              "url"
            ],
            "title": "ProductsList",
            "type": "object",
            "properties": {
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "items": {
                "description": "Details about each object.",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "store_identifier",
                    "type",
                    "created_at",
                    "app_id",
                    "object",
                    "display_name"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "product"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the product",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "prod1a2b3c4d5e"
                    },
                    "store_identifier": {
                      "description": "The store product identifier",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "rc_1w_199"
                    },
                    "type": {
                      "description": "The product type",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "subscription",
                        "one_time"
                      ]
                    },
                    "subscription": {
                      "description": "The subscription product object",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "duration",
                        "grace_period_duration",
                        "trial_duration"
                      ],
                      "properties": {
                        "duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription in ISO-8601 standard",
                          "example": "P1M"
                        },
                        "grace_period_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription's grace period in ISO-8601 standard",
                          "example": "P3D"
                        },
                        "trial_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subcription's trial period in ISO-8601 standard",
                          "example": "P1W"
                        }
                      }
                    },
                    "created_at": {
                      "description": "The date when the product was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "app_id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "app": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "type",
                        "project_id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The id of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "app1a2b3c4"
                        },
                        "name": {
                          "description": "The name of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1500
                        },
                        "created_at": {
                          "description": "The date when the app was created in ms since epoch",
                          "nullable": false,
                          "type": "integer",
                          "example": 1658399423658
                        },
                        "type": {
                          "description": "The platform of the app",
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "amazon",
                            "app_store",
                            "mac_app_store",
                            "play_store",
                            "stripe"
                          ],
                          "example": "amazon"
                        },
                        "project_id": {
                          "description": "The id of the project",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "proj1a2b3c4"
                        }
                      },
                      "description": "The app associated with the product",
                      "nullable": true
                    },
                    "display_name": {
                      "description": "The display name of the product",
                      "nullable": true,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium Monthly 2023"
                    }
                  }
                },
                "type": "array"
              },
              "next_page": {
                "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                "type": "string",
                "nullable": true,
                "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string",
                "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "type",
          "message",
          "retryable"
        ],
        "properties": {
          "type": {
            "description": "The error type",
            "type": "string",
            "nullable": false,
            "enum": [
              "parameter_error",
              "resource_already_exists",
              "resource_missing",
              "idempotency_error",
              "rate_limit_error",
              "authentication_error",
              "authorization_error",
              "store_error",
              "server_error",
              "resource_locked_error",
              "unprocessable_entity_error",
              "invalid_request"
            ],
            "example": "parameter_error"
          },
          "param": {
            "description": "If the error is parameter-specific, the parameter related to the error",
            "type": "string",
            "nullable": true,
            "example": "customer_id"
          },
          "doc_url": {
            "description": "A URL to more information about the error reported",
            "type": "string",
            "nullable": false,
            "example": "https://errors.rev.cat/parameter-error"
          },
          "message": {
            "type": "string",
            "description": "A message describing the reason of the error",
            "nullable": false,
            "example": "id shouldn't be longer than 1,500 characters"
          },
          "retryable": {
            "description": "Indicates if the error is retryable or not",
            "type": "boolean",
            "nullable": false,
            "example": false
          },
          "backoff_ms": {
            "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "ListApps": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "AppList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "type",
                "project_id"
              ],
              "properties": {
                "id": {
                  "description": "The id of the app",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "app1a2b3c4"
                },
                "name": {
                  "description": "The name of the app",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500
                },
                "created_at": {
                  "description": "The date when the app was created in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                },
                "type": {
                  "description": "The platform of the app",
                  "nullable": false,
                  "type": "string",
                  "enum": [
                    "amazon",
                    "app_store",
                    "mac_app_store",
                    "play_store",
                    "stripe"
                  ],
                  "example": "amazon"
                },
                "project_id": {
                  "description": "The id of the project",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "proj1a2b3c4"
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the project's apps. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/projec1a2b3c4d/apps?starting_after=app1a2b3c4d"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/projec1a2b3c4d/apps"
          }
        }
      },
      "ListEntitlements": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "EntitlementList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "project_id",
                "id",
                "lookup_key",
                "display_name",
                "created_at"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "entitlement"
                  ],
                  "type": "string"
                },
                "project_id": {
                  "nullable": false,
                  "description": "ID of the project to which the entitlement belongs",
                  "minLength": 1,
                  "maxLength": 20,
                  "type": "string",
                  "example": "proj1ab2c3d4"
                },
                "id": {
                  "description": "The id of the entitlement",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "entla1b2c3d4e5"
                },
                "lookup_key": {
                  "description": "A custom identifier of the entitlement",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 200,
                  "example": "premium"
                },
                "display_name": {
                  "description": "The display name of the entitlement",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500,
                  "example": "Premium"
                },
                "created_at": {
                  "nullable": false,
                  "type": "integer",
                  "description": "The date when the entitlement was created in ms since epoch",
                  "example": 1658399423658
                },
                "products": {
                  "description": "List of products attached to the entitlement",
                  "nullable": true,
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProductsList",
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "store_identifier",
                          "type",
                          "created_at",
                          "app_id",
                          "object",
                          "display_name"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                            "enum": [
                              "product"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the product",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "prod1a2b3c4d5e"
                          },
                          "store_identifier": {
                            "description": "The store product identifier",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "rc_1w_199"
                          },
                          "type": {
                            "description": "The product type",
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "subscription",
                              "one_time"
                            ]
                          },
                          "subscription": {
                            "description": "The subscription product object",
                            "nullable": true,
                            "type": "object",
                            "required": [
                              "duration",
                              "grace_period_duration",
                              "trial_duration"
                            ],
                            "properties": {
                              "duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription in ISO-8601 standard",
                                "example": "P1M"
                              },
                              "grace_period_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                "example": "P3D"
                              },
                              "trial_duration": {
                                "type": "string",
                                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                "nullable": true,
                                "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                "example": "P1W"
                              }
                            }
                          },
                          "created_at": {
                            "description": "The date when the product was created in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "app_id": {
                            "description": "The id of the app",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "app1a2b3c4"
                          },
                          "app": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "type",
                              "project_id"
                            ],
                            "properties": {
                              "id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "name": {
                                "description": "The name of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500
                              },
                              "created_at": {
                                "description": "The date when the app was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "type": {
                                "description": "The platform of the app",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "amazon",
                                  "app_store",
                                  "mac_app_store",
                                  "play_store",
                                  "stripe"
                                ],
                                "example": "amazon"
                              },
                              "project_id": {
                                "description": "The id of the project",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "proj1a2b3c4"
                              }
                            },
                            "description": "The app associated with the product",
                            "nullable": true
                          },
                          "display_name": {
                            "description": "The display name of the product",
                            "nullable": true,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Premium Monthly 2023"
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the Entitlement's products. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products?starting_after=prodeab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/entitlements/entle1a2b3c4d5/products"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the project's entitlements. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/entitlements?starting_after=entlab21dac"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/entitlements"
          }
        }
      },
      "ListOfferings": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "OfferingList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "lookup_key",
                "display_name",
                "is_current",
                "created_at",
                "project_id"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "offering"
                  ],
                  "type": "string"
                },
                "id": {
                  "description": "The id of the offering",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "ofrnge1a2b3c4d5"
                },
                "lookup_key": {
                  "description": "A custom identifier of the entitlement",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 200,
                  "example": "default"
                },
                "display_name": {
                  "description": "The display name of the offering",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500,
                  "example": "The standard set of packages"
                },
                "is_current": {
                  "description": "Indicates if the offering is the current offering",
                  "nullable": false,
                  "type": "boolean",
                  "example": true
                },
                "created_at": {
                  "description": "The date the offering was created at in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                },
                "project_id": {
                  "description": "ID of the project to which the offering belongs",
                  "nullable": false,
                  "minLength": 1,
                  "maxLength": 20,
                  "type": "string",
                  "example": "proj1ab2c3d4"
                },
                "metadata": {
                  "description": "Custom metadata of the offering",
                  "nullable": true,
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "color": "blue",
                    "call_to_action": "Subscribe Now!"
                  }
                },
                "packages": {
                  "nullable": true,
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "PackageList",
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Details about each object.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "lookup_key",
                          "display_name",
                          "position",
                          "created_at"
                        ],
                        "properties": {
                          "object": {
                            "description": "String representing the object's type. Objects of the same type share the same value.",
                            "enum": [
                              "package"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "description": "The id of the package",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "pkge1a2b3c4d5"
                          },
                          "lookup_key": {
                            "description": "The lookup_key of the package",
                            "nullable": false,
                            "example": "monthly",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200
                          },
                          "display_name": {
                            "description": "The display name of the package",
                            "nullable": false,
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1500,
                            "example": "Monthly discounted with 3-day trial"
                          },
                          "position": {
                            "description": "The position of the package within the offering",
                            "nullable": true,
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "description": "The date the package was created at in ms since epoch",
                            "nullable": false,
                            "type": "integer",
                            "example": 1658399423658
                          },
                          "products": {
                            "nullable": true,
                            "required": [
                              "items",
                              "next_page",
                              "object",
                              "url"
                            ],
                            "title": "ProductList",
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "list"
                                ],
                                "type": "string"
                              },
                              "items": {
                                "description": "Product association",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "product",
                                    "eligibility_criteria"
                                  ],
                                  "properties": {
                                    "product": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "store_identifier",
                                        "type",
                                        "created_at",
                                        "app_id",
                                        "object",
                                        "display_name"
                                      ],
                                      "properties": {
                                        "object": {
                                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                          "enum": [
                                            "product"
                                          ],
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "The id of the product",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "prod1a2b3c4d5e"
                                        },
                                        "store_identifier": {
                                          "description": "The store product identifier",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "rc_1w_199"
                                        },
                                        "type": {
                                          "description": "The product type",
                                          "nullable": false,
                                          "type": "string",
                                          "enum": [
                                            "subscription",
                                            "one_time"
                                          ]
                                        },
                                        "subscription": {
                                          "description": "The subscription product object",
                                          "nullable": true,
                                          "type": "object",
                                          "required": [
                                            "duration",
                                            "grace_period_duration",
                                            "trial_duration"
                                          ],
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subscription in ISO-8601 standard",
                                              "example": "P1M"
                                            },
                                            "grace_period_duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                              "example": "P3D"
                                            },
                                            "trial_duration": {
                                              "type": "string",
                                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                              "nullable": true,
                                              "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                              "example": "P1W"
                                            }
                                          }
                                        },
                                        "created_at": {
                                          "description": "The date when the product was created in ms since epoch",
                                          "nullable": false,
                                          "type": "integer",
                                          "example": 1658399423658
                                        },
                                        "app_id": {
                                          "description": "The id of the app",
                                          "nullable": false,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "app1a2b3c4"
                                        },
                                        "app": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "created_at",
                                            "type",
                                            "project_id"
                                          ],
                                          "properties": {
                                            "id": {
                                              "description": "The id of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "app1a2b3c4"
                                            },
                                            "name": {
                                              "description": "The name of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 1500
                                            },
                                            "created_at": {
                                              "description": "The date when the app was created in ms since epoch",
                                              "nullable": false,
                                              "type": "integer",
                                              "example": 1658399423658
                                            },
                                            "type": {
                                              "description": "The platform of the app",
                                              "nullable": false,
                                              "type": "string",
                                              "enum": [
                                                "amazon",
                                                "app_store",
                                                "mac_app_store",
                                                "play_store",
                                                "stripe"
                                              ],
                                              "example": "amazon"
                                            },
                                            "project_id": {
                                              "description": "The id of the project",
                                              "nullable": false,
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 255,
                                              "example": "proj1a2b3c4"
                                            }
                                          },
                                          "description": "The app associated with the product",
                                          "nullable": true
                                        },
                                        "display_name": {
                                          "description": "The display name of the product",
                                          "nullable": true,
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 1500,
                                          "example": "Premium Monthly 2023"
                                        }
                                      },
                                      "nullable": false
                                    },
                                    "eligibility_criteria": {
                                      "nullable": false,
                                      "type": "string",
                                      "enum": [
                                        "all",
                                        "google_sdk_lt_6",
                                        "google_sdk_ge_6"
                                      ]
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "next_page": {
                                "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                                "type": "string",
                                "nullable": true,
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                              },
                              "url": {
                                "description": "The URL where this list can be accessed.",
                                "maxLength": 5000,
                                "type": "string",
                                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the project's offerings. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/offerings?starting_after=ofrngeab21da"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/offerings"
          }
        }
      },
      "ListPackages": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "PackageList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "lookup_key",
                "display_name",
                "position",
                "created_at"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "package"
                  ],
                  "type": "string"
                },
                "id": {
                  "description": "The id of the package",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "pkge1a2b3c4d5"
                },
                "lookup_key": {
                  "description": "The lookup_key of the package",
                  "nullable": false,
                  "example": "monthly",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 200
                },
                "display_name": {
                  "description": "The display name of the package",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500,
                  "example": "Monthly discounted with 3-day trial"
                },
                "position": {
                  "description": "The position of the package within the offering",
                  "nullable": true,
                  "type": "integer",
                  "example": 1
                },
                "created_at": {
                  "description": "The date the package was created at in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                },
                "products": {
                  "nullable": true,
                  "required": [
                    "items",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "ProductList",
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "items": {
                      "description": "Product association",
                      "items": {
                        "type": "object",
                        "required": [
                          "product",
                          "eligibility_criteria"
                        ],
                        "properties": {
                          "product": {
                            "type": "object",
                            "required": [
                              "id",
                              "store_identifier",
                              "type",
                              "created_at",
                              "app_id",
                              "object",
                              "display_name"
                            ],
                            "properties": {
                              "object": {
                                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                "enum": [
                                  "product"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the product",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "prod1a2b3c4d5e"
                              },
                              "store_identifier": {
                                "description": "The store product identifier",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "rc_1w_199"
                              },
                              "type": {
                                "description": "The product type",
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "subscription",
                                  "one_time"
                                ]
                              },
                              "subscription": {
                                "description": "The subscription product object",
                                "nullable": true,
                                "type": "object",
                                "required": [
                                  "duration",
                                  "grace_period_duration",
                                  "trial_duration"
                                ],
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription in ISO-8601 standard",
                                    "example": "P1M"
                                  },
                                  "grace_period_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                    "example": "P3D"
                                  },
                                  "trial_duration": {
                                    "type": "string",
                                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                    "nullable": true,
                                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                    "example": "P1W"
                                  }
                                }
                              },
                              "created_at": {
                                "description": "The date when the product was created in ms since epoch",
                                "nullable": false,
                                "type": "integer",
                                "example": 1658399423658
                              },
                              "app_id": {
                                "description": "The id of the app",
                                "nullable": false,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "app1a2b3c4"
                              },
                              "app": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "type",
                                  "project_id"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "name": {
                                    "description": "The name of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500
                                  },
                                  "created_at": {
                                    "description": "The date when the app was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "type": {
                                    "description": "The platform of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "amazon",
                                      "app_store",
                                      "mac_app_store",
                                      "play_store",
                                      "stripe"
                                    ],
                                    "example": "amazon"
                                  },
                                  "project_id": {
                                    "description": "The id of the project",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "proj1a2b3c4"
                                  }
                                },
                                "description": "The app associated with the product",
                                "nullable": true
                              },
                              "display_name": {
                                "description": "The display name of the product",
                                "nullable": true,
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1500,
                                "example": "Premium Monthly 2023"
                              }
                            },
                            "nullable": false
                          },
                          "eligibility_criteria": {
                            "nullable": false,
                            "type": "string",
                            "enum": [
                              "all",
                              "google_sdk_lt_6",
                              "google_sdk_ge_6"
                            ]
                          }
                        }
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                      "type": "string",
                      "nullable": true,
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string",
                      "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the project's packages. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
          }
        }
      },
      "ListProducts": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "ProductList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "store_identifier",
                "type",
                "created_at",
                "app_id",
                "object",
                "display_name"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "product"
                  ],
                  "type": "string"
                },
                "id": {
                  "description": "The id of the product",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "prod1a2b3c4d5e"
                },
                "store_identifier": {
                  "description": "The store product identifier",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "rc_1w_199"
                },
                "type": {
                  "description": "The product type",
                  "nullable": false,
                  "type": "string",
                  "enum": [
                    "subscription",
                    "one_time"
                  ]
                },
                "subscription": {
                  "description": "The subscription product object",
                  "nullable": true,
                  "type": "object",
                  "required": [
                    "duration",
                    "grace_period_duration",
                    "trial_duration"
                  ],
                  "properties": {
                    "duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subscription in ISO-8601 standard",
                      "example": "P1M"
                    },
                    "grace_period_duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subscription's grace period in ISO-8601 standard",
                      "example": "P3D"
                    },
                    "trial_duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subcription's trial period in ISO-8601 standard",
                      "example": "P1W"
                    }
                  }
                },
                "created_at": {
                  "description": "The date when the product was created in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                },
                "app_id": {
                  "description": "The id of the app",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "app1a2b3c4"
                },
                "app": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "type",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "name": {
                      "description": "The name of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500
                    },
                    "created_at": {
                      "description": "The date when the app was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "type": {
                      "description": "The platform of the app",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "amazon",
                        "app_store",
                        "mac_app_store",
                        "play_store",
                        "stripe"
                      ],
                      "example": "amazon"
                    },
                    "project_id": {
                      "description": "The id of the project",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "proj1a2b3c4"
                    }
                  },
                  "description": "The app associated with the product",
                  "nullable": true
                },
                "display_name": {
                  "description": "The display name of the product",
                  "nullable": true,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500,
                  "example": "Premium Monthly 2023"
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/products?starting_after=prodab21dac"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/products"
          }
        }
      },
      "ListProjects": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "ProjectList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "project"
                  ],
                  "type": "string"
                },
                "id": {
                  "description": "The id of the project",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "proj1ab2c3d4"
                },
                "name": {
                  "description": "The name of the project",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 256,
                  "example": "MagicWeather"
                },
                "created_at": {
                  "description": "The date when the project was created in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the projects. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects?starting_after=projab21dac"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects"
          }
        }
      },
      "Offering": {
        "type": "object",
        "required": [
          "id",
          "lookup_key",
          "display_name",
          "is_current",
          "created_at",
          "project_id"
        ],
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "offering"
            ],
            "type": "string"
          },
          "id": {
            "description": "The id of the offering",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "ofrnge1a2b3c4d5"
          },
          "lookup_key": {
            "description": "A custom identifier of the entitlement",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "example": "default"
          },
          "display_name": {
            "description": "The display name of the offering",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 1500,
            "example": "The standard set of packages"
          },
          "is_current": {
            "description": "Indicates if the offering is the current offering",
            "nullable": false,
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "description": "The date the offering was created at in ms since epoch",
            "nullable": false,
            "type": "integer",
            "example": 1658399423658
          },
          "project_id": {
            "description": "ID of the project to which the offering belongs",
            "nullable": false,
            "minLength": 1,
            "maxLength": 20,
            "type": "string",
            "example": "proj1ab2c3d4"
          },
          "metadata": {
            "description": "Custom metadata of the offering",
            "nullable": true,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "color": "blue",
              "call_to_action": "Subscribe Now!"
            }
          },
          "packages": {
            "nullable": true,
            "required": [
              "items",
              "next_page",
              "object",
              "url"
            ],
            "title": "PackageList",
            "type": "object",
            "properties": {
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "items": {
                "description": "Details about each object.",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "lookup_key",
                    "display_name",
                    "position",
                    "created_at"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "package"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "pkge1a2b3c4d5"
                    },
                    "lookup_key": {
                      "description": "The lookup_key of the package",
                      "nullable": false,
                      "example": "monthly",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200
                    },
                    "display_name": {
                      "description": "The display name of the package",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Monthly discounted with 3-day trial"
                    },
                    "position": {
                      "description": "The position of the package within the offering",
                      "nullable": true,
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "description": "The date the package was created at in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "products": {
                      "nullable": true,
                      "required": [
                        "items",
                        "next_page",
                        "object",
                        "url"
                      ],
                      "title": "ProductList",
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "items": {
                          "description": "Product association",
                          "items": {
                            "type": "object",
                            "required": [
                              "product",
                              "eligibility_criteria"
                            ],
                            "properties": {
                              "product": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "store_identifier",
                                  "type",
                                  "created_at",
                                  "app_id",
                                  "object",
                                  "display_name"
                                ],
                                "properties": {
                                  "object": {
                                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                                    "enum": [
                                      "product"
                                    ],
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The id of the product",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "prod1a2b3c4d5e"
                                  },
                                  "store_identifier": {
                                    "description": "The store product identifier",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "rc_1w_199"
                                  },
                                  "type": {
                                    "description": "The product type",
                                    "nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "subscription",
                                      "one_time"
                                    ]
                                  },
                                  "subscription": {
                                    "description": "The subscription product object",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "duration",
                                      "grace_period_duration",
                                      "trial_duration"
                                    ],
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription in ISO-8601 standard",
                                        "example": "P1M"
                                      },
                                      "grace_period_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subscription's grace period in ISO-8601 standard",
                                        "example": "P3D"
                                      },
                                      "trial_duration": {
                                        "type": "string",
                                        "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                                        "nullable": true,
                                        "description": "The duration of the subcription's trial period in ISO-8601 standard",
                                        "example": "P1W"
                                      }
                                    }
                                  },
                                  "created_at": {
                                    "description": "The date when the product was created in ms since epoch",
                                    "nullable": false,
                                    "type": "integer",
                                    "example": 1658399423658
                                  },
                                  "app_id": {
                                    "description": "The id of the app",
                                    "nullable": false,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "app1a2b3c4"
                                  },
                                  "app": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "created_at",
                                      "type",
                                      "project_id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "description": "The id of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "app1a2b3c4"
                                      },
                                      "name": {
                                        "description": "The name of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1500
                                      },
                                      "created_at": {
                                        "description": "The date when the app was created in ms since epoch",
                                        "nullable": false,
                                        "type": "integer",
                                        "example": 1658399423658
                                      },
                                      "type": {
                                        "description": "The platform of the app",
                                        "nullable": false,
                                        "type": "string",
                                        "enum": [
                                          "amazon",
                                          "app_store",
                                          "mac_app_store",
                                          "play_store",
                                          "stripe"
                                        ],
                                        "example": "amazon"
                                      },
                                      "project_id": {
                                        "description": "The id of the project",
                                        "nullable": false,
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "example": "proj1a2b3c4"
                                      }
                                    },
                                    "description": "The app associated with the product",
                                    "nullable": true
                                  },
                                  "display_name": {
                                    "description": "The display name of the product",
                                    "nullable": true,
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1500,
                                    "example": "Premium Monthly 2023"
                                  }
                                },
                                "nullable": false
                              },
                              "eligibility_criteria": {
                                "nullable": false,
                                "type": "string",
                                "enum": [
                                  "all",
                                  "google_sdk_lt_6",
                                  "google_sdk_ge_6"
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                          "type": "string",
                          "nullable": true,
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
                        },
                        "url": {
                          "description": "The URL where this list can be accessed.",
                          "maxLength": 5000,
                          "type": "string",
                          "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
                        }
                      }
                    }
                  }
                },
                "type": "array"
              },
              "next_page": {
                "description": "URL to access the next page of the Offering's packages. If not present / null, there is no next page",
                "type": "string",
                "nullable": true,
                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages?starting_after=pkgeab21dac"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string",
                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages"
              }
            }
          }
        }
      },
      "OfferingMetadata": {
        "description": "Custom metadata of the offering",
        "type": "object",
        "nullable": true,
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "color": "blue",
          "call_to_action": "Subscribe Now!"
        }
      },
      "Package": {
        "type": "object",
        "required": [
          "id",
          "lookup_key",
          "display_name",
          "position",
          "created_at"
        ],
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "package"
            ],
            "type": "string"
          },
          "id": {
            "description": "The id of the package",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "pkge1a2b3c4d5"
          },
          "lookup_key": {
            "description": "The lookup_key of the package",
            "nullable": false,
            "example": "monthly",
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "display_name": {
            "description": "The display name of the package",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 1500,
            "example": "Monthly discounted with 3-day trial"
          },
          "position": {
            "description": "The position of the package within the offering",
            "nullable": true,
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "description": "The date the package was created at in ms since epoch",
            "nullable": false,
            "type": "integer",
            "example": 1658399423658
          },
          "products": {
            "nullable": true,
            "required": [
              "items",
              "next_page",
              "object",
              "url"
            ],
            "title": "ProductList",
            "properties": {
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "items": {
                "description": "Product association",
                "items": {
                  "type": "object",
                  "required": [
                    "product",
                    "eligibility_criteria"
                  ],
                  "properties": {
                    "product": {
                      "type": "object",
                      "required": [
                        "id",
                        "store_identifier",
                        "type",
                        "created_at",
                        "app_id",
                        "object",
                        "display_name"
                      ],
                      "properties": {
                        "object": {
                          "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                          "enum": [
                            "product"
                          ],
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of the product",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "prod1a2b3c4d5e"
                        },
                        "store_identifier": {
                          "description": "The store product identifier",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "rc_1w_199"
                        },
                        "type": {
                          "description": "The product type",
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "subscription",
                            "one_time"
                          ]
                        },
                        "subscription": {
                          "description": "The subscription product object",
                          "nullable": true,
                          "type": "object",
                          "required": [
                            "duration",
                            "grace_period_duration",
                            "trial_duration"
                          ],
                          "properties": {
                            "duration": {
                              "type": "string",
                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                              "nullable": true,
                              "description": "The duration of the subscription in ISO-8601 standard",
                              "example": "P1M"
                            },
                            "grace_period_duration": {
                              "type": "string",
                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                              "nullable": true,
                              "description": "The duration of the subscription's grace period in ISO-8601 standard",
                              "example": "P3D"
                            },
                            "trial_duration": {
                              "type": "string",
                              "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                              "nullable": true,
                              "description": "The duration of the subcription's trial period in ISO-8601 standard",
                              "example": "P1W"
                            }
                          }
                        },
                        "created_at": {
                          "description": "The date when the product was created in ms since epoch",
                          "nullable": false,
                          "type": "integer",
                          "example": 1658399423658
                        },
                        "app_id": {
                          "description": "The id of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "app1a2b3c4"
                        },
                        "app": {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "type",
                            "project_id"
                          ],
                          "properties": {
                            "id": {
                              "description": "The id of the app",
                              "nullable": false,
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "app1a2b3c4"
                            },
                            "name": {
                              "description": "The name of the app",
                              "nullable": false,
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 1500
                            },
                            "created_at": {
                              "description": "The date when the app was created in ms since epoch",
                              "nullable": false,
                              "type": "integer",
                              "example": 1658399423658
                            },
                            "type": {
                              "description": "The platform of the app",
                              "nullable": false,
                              "type": "string",
                              "enum": [
                                "amazon",
                                "app_store",
                                "mac_app_store",
                                "play_store",
                                "stripe"
                              ],
                              "example": "amazon"
                            },
                            "project_id": {
                              "description": "The id of the project",
                              "nullable": false,
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "proj1a2b3c4"
                            }
                          },
                          "description": "The app associated with the product",
                          "nullable": true
                        },
                        "display_name": {
                          "description": "The display name of the product",
                          "nullable": true,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1500,
                          "example": "Premium Monthly 2023"
                        }
                      },
                      "nullable": false
                    },
                    "eligibility_criteria": {
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "all",
                        "google_sdk_lt_6",
                        "google_sdk_ge_6"
                      ]
                    }
                  }
                },
                "type": "array"
              },
              "next_page": {
                "description": "URL to access the next page of the project's products. If not present / null, there is no next page",
                "type": "string",
                "nullable": true,
                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products?starting_after=prodab21dac"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string",
                "example": "/v2/projects/proj1ab2c3d4/offerings/ofrnge1a2b3c4d5/packages/pkge1a2b3c4d5/products"
              }
            }
          }
        }
      },
      "PackageProductAssociation": {
        "type": "object",
        "required": [
          "product",
          "eligibility_criteria"
        ],
        "properties": {
          "product": {
            "type": "object",
            "required": [
              "id",
              "store_identifier",
              "type",
              "created_at",
              "app_id",
              "object",
              "display_name"
            ],
            "properties": {
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "product"
                ],
                "type": "string"
              },
              "id": {
                "description": "The id of the product",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": "prod1a2b3c4d5e"
              },
              "store_identifier": {
                "description": "The store product identifier",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": "rc_1w_199"
              },
              "type": {
                "description": "The product type",
                "nullable": false,
                "type": "string",
                "enum": [
                  "subscription",
                  "one_time"
                ]
              },
              "subscription": {
                "description": "The subscription product object",
                "nullable": true,
                "type": "object",
                "required": [
                  "duration",
                  "grace_period_duration",
                  "trial_duration"
                ],
                "properties": {
                  "duration": {
                    "type": "string",
                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                    "nullable": true,
                    "description": "The duration of the subscription in ISO-8601 standard",
                    "example": "P1M"
                  },
                  "grace_period_duration": {
                    "type": "string",
                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                    "nullable": true,
                    "description": "The duration of the subscription's grace period in ISO-8601 standard",
                    "example": "P3D"
                  },
                  "trial_duration": {
                    "type": "string",
                    "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                    "nullable": true,
                    "description": "The duration of the subcription's trial period in ISO-8601 standard",
                    "example": "P1W"
                  }
                }
              },
              "created_at": {
                "description": "The date when the product was created in ms since epoch",
                "nullable": false,
                "type": "integer",
                "example": 1658399423658
              },
              "app_id": {
                "description": "The id of the app",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": "app1a2b3c4"
              },
              "app": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "created_at",
                  "type",
                  "project_id"
                ],
                "properties": {
                  "id": {
                    "description": "The id of the app",
                    "nullable": false,
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "app1a2b3c4"
                  },
                  "name": {
                    "description": "The name of the app",
                    "nullable": false,
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1500
                  },
                  "created_at": {
                    "description": "The date when the app was created in ms since epoch",
                    "nullable": false,
                    "type": "integer",
                    "example": 1658399423658
                  },
                  "type": {
                    "description": "The platform of the app",
                    "nullable": false,
                    "type": "string",
                    "enum": [
                      "amazon",
                      "app_store",
                      "mac_app_store",
                      "play_store",
                      "stripe"
                    ],
                    "example": "amazon"
                  },
                  "project_id": {
                    "description": "The id of the project",
                    "nullable": false,
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "proj1a2b3c4"
                  }
                },
                "description": "The app associated with the product",
                "nullable": true
              },
              "display_name": {
                "description": "The display name of the product",
                "nullable": true,
                "type": "string",
                "minLength": 1,
                "maxLength": 1500,
                "example": "Premium Monthly 2023"
              }
            },
            "nullable": false
          },
          "eligibility_criteria": {
            "nullable": false,
            "type": "string",
            "enum": [
              "all",
              "google_sdk_lt_6",
              "google_sdk_ge_6"
            ]
          }
        }
      },
      "PackageProductIDAssociation": {
        "type": "object",
        "required": [
          "product_id",
          "eligibility_criteria"
        ],
        "properties": {
          "product_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false
          },
          "eligibility_criteria": {
            "nullable": false,
            "type": "string",
            "enum": [
              "all",
              "google_sdk_lt_6",
              "google_sdk_ge_6"
            ]
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "id",
          "store_identifier",
          "type",
          "created_at",
          "app_id",
          "object",
          "display_name"
        ],
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "product"
            ],
            "type": "string"
          },
          "id": {
            "description": "The id of the product",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "prod1a2b3c4d5e"
          },
          "store_identifier": {
            "description": "The store product identifier",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "rc_1w_199"
          },
          "type": {
            "description": "The product type",
            "nullable": false,
            "type": "string",
            "enum": [
              "subscription",
              "one_time"
            ]
          },
          "subscription": {
            "description": "The subscription product object",
            "nullable": true,
            "type": "object",
            "required": [
              "duration",
              "grace_period_duration",
              "trial_duration"
            ],
            "properties": {
              "duration": {
                "type": "string",
                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                "nullable": true,
                "description": "The duration of the subscription in ISO-8601 standard",
                "example": "P1M"
              },
              "grace_period_duration": {
                "type": "string",
                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                "nullable": true,
                "description": "The duration of the subscription's grace period in ISO-8601 standard",
                "example": "P3D"
              },
              "trial_duration": {
                "type": "string",
                "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                "nullable": true,
                "description": "The duration of the subcription's trial period in ISO-8601 standard",
                "example": "P1W"
              }
            }
          },
          "created_at": {
            "description": "The date when the product was created in ms since epoch",
            "nullable": false,
            "type": "integer",
            "example": 1658399423658
          },
          "app_id": {
            "description": "The id of the app",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "app1a2b3c4"
          },
          "app": {
            "type": "object",
            "required": [
              "id",
              "name",
              "created_at",
              "type",
              "project_id"
            ],
            "properties": {
              "id": {
                "description": "The id of the app",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": "app1a2b3c4"
              },
              "name": {
                "description": "The name of the app",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 1500
              },
              "created_at": {
                "description": "The date when the app was created in ms since epoch",
                "nullable": false,
                "type": "integer",
                "example": 1658399423658
              },
              "type": {
                "description": "The platform of the app",
                "nullable": false,
                "type": "string",
                "enum": [
                  "amazon",
                  "app_store",
                  "mac_app_store",
                  "play_store",
                  "stripe"
                ],
                "example": "amazon"
              },
              "project_id": {
                "description": "The id of the project",
                "nullable": false,
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": "proj1a2b3c4"
              }
            },
            "description": "The app associated with the product",
            "nullable": true
          },
          "display_name": {
            "description": "The display name of the product",
            "nullable": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 1500,
            "example": "Premium Monthly 2023"
          }
        }
      },
      "ProductType": {
        "type": "string",
        "nullable": false,
        "enum": [
          "subscription",
          "one_time"
        ]
      },
      "ProductsFromEntitlement": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "ProductsFromEntitlementList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "store_identifier",
                "type",
                "created_at",
                "app_id",
                "object",
                "display_name"
              ],
              "properties": {
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "product"
                  ],
                  "type": "string"
                },
                "id": {
                  "description": "The id of the product",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "prod1a2b3c4d5e"
                },
                "store_identifier": {
                  "description": "The store product identifier",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "rc_1w_199"
                },
                "type": {
                  "description": "The product type",
                  "nullable": false,
                  "type": "string",
                  "enum": [
                    "subscription",
                    "one_time"
                  ]
                },
                "subscription": {
                  "description": "The subscription product object",
                  "nullable": true,
                  "type": "object",
                  "required": [
                    "duration",
                    "grace_period_duration",
                    "trial_duration"
                  ],
                  "properties": {
                    "duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subscription in ISO-8601 standard",
                      "example": "P1M"
                    },
                    "grace_period_duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subscription's grace period in ISO-8601 standard",
                      "example": "P3D"
                    },
                    "trial_duration": {
                      "type": "string",
                      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                      "nullable": true,
                      "description": "The duration of the subcription's trial period in ISO-8601 standard",
                      "example": "P1W"
                    }
                  }
                },
                "created_at": {
                  "description": "The date when the product was created in ms since epoch",
                  "nullable": false,
                  "type": "integer",
                  "example": 1658399423658
                },
                "app_id": {
                  "description": "The id of the app",
                  "nullable": false,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "app1a2b3c4"
                },
                "app": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "type",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "name": {
                      "description": "The name of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500
                    },
                    "created_at": {
                      "description": "The date when the app was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "type": {
                      "description": "The platform of the app",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "amazon",
                        "app_store",
                        "mac_app_store",
                        "play_store",
                        "stripe"
                      ],
                      "example": "amazon"
                    },
                    "project_id": {
                      "description": "The id of the project",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "proj1a2b3c4"
                    }
                  },
                  "description": "The app associated with the product",
                  "nullable": true
                },
                "display_name": {
                  "description": "The display name of the product",
                  "nullable": true,
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1500,
                  "example": "Premium Monthly 2023"
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the entitlement's products. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/entitlements/entla1b2c3d4e5/products?starting_after=prod1a2b3c4d5"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/entitlements/entla1b2c3d4e5/products"
          }
        }
      },
      "ProductsFromPackage": {
        "type": "object",
        "required": [
          "items",
          "next_page",
          "object",
          "url"
        ],
        "title": "ProductsFromPackageList",
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "items": {
            "description": "Details about each object",
            "items": {
              "type": "object",
              "required": [
                "product",
                "eligibility_criteria"
              ],
              "properties": {
                "product": {
                  "type": "object",
                  "required": [
                    "id",
                    "store_identifier",
                    "type",
                    "created_at",
                    "app_id",
                    "object",
                    "display_name"
                  ],
                  "properties": {
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "product"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "The id of the product",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "prod1a2b3c4d5e"
                    },
                    "store_identifier": {
                      "description": "The store product identifier",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "rc_1w_199"
                    },
                    "type": {
                      "description": "The product type",
                      "nullable": false,
                      "type": "string",
                      "enum": [
                        "subscription",
                        "one_time"
                      ]
                    },
                    "subscription": {
                      "description": "The subscription product object",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "duration",
                        "grace_period_duration",
                        "trial_duration"
                      ],
                      "properties": {
                        "duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription in ISO-8601 standard",
                          "example": "P1M"
                        },
                        "grace_period_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subscription's grace period in ISO-8601 standard",
                          "example": "P3D"
                        },
                        "trial_duration": {
                          "type": "string",
                          "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
                          "nullable": true,
                          "description": "The duration of the subcription's trial period in ISO-8601 standard",
                          "example": "P1W"
                        }
                      }
                    },
                    "created_at": {
                      "description": "The date when the product was created in ms since epoch",
                      "nullable": false,
                      "type": "integer",
                      "example": 1658399423658
                    },
                    "app_id": {
                      "description": "The id of the app",
                      "nullable": false,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "app1a2b3c4"
                    },
                    "app": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "type",
                        "project_id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The id of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "app1a2b3c4"
                        },
                        "name": {
                          "description": "The name of the app",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1500
                        },
                        "created_at": {
                          "description": "The date when the app was created in ms since epoch",
                          "nullable": false,
                          "type": "integer",
                          "example": 1658399423658
                        },
                        "type": {
                          "description": "The platform of the app",
                          "nullable": false,
                          "type": "string",
                          "enum": [
                            "amazon",
                            "app_store",
                            "mac_app_store",
                            "play_store",
                            "stripe"
                          ],
                          "example": "amazon"
                        },
                        "project_id": {
                          "description": "The id of the project",
                          "nullable": false,
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "proj1a2b3c4"
                        }
                      },
                      "description": "The app associated with the product",
                      "nullable": true
                    },
                    "display_name": {
                      "description": "The display name of the product",
                      "nullable": true,
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1500,
                      "example": "Premium Monthly 2023"
                    }
                  },
                  "nullable": false
                },
                "eligibility_criteria": {
                  "nullable": false,
                  "type": "string",
                  "enum": [
                    "all",
                    "google_sdk_lt_6",
                    "google_sdk_ge_6"
                  ]
                }
              }
            },
            "type": "array"
          },
          "next_page": {
            "description": "URL to access the next page of the entitlement's products. If not present / null, there is no next page",
            "type": "string",
            "nullable": true,
            "example": "/v2/projects/proj1ab2c3d4/packages/pkge1a2b3c4d5/products?starting_after=prod1a2b3c4d5"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string",
            "example": "/v2/projects/proj1ab2c3d4/packages/pkge1a2b3c4d5/products"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "project"
            ],
            "type": "string"
          },
          "id": {
            "description": "The id of the project",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "proj1ab2c3d4"
          },
          "name": {
            "description": "The name of the project",
            "nullable": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "MagicWeather"
          },
          "created_at": {
            "description": "The date when the project was created in ms since epoch",
            "nullable": false,
            "type": "integer",
            "example": 1658399423658
          }
        }
      },
      "SubscriptionProduct": {
        "type": "object",
        "required": [
          "duration",
          "grace_period_duration",
          "trial_duration"
        ],
        "nullable": true,
        "properties": {
          "duration": {
            "type": "string",
            "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
            "nullable": true,
            "description": "The duration of the subscription in ISO-8601 standard",
            "example": "P1M"
          },
          "grace_period_duration": {
            "type": "string",
            "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
            "nullable": true,
            "description": "The duration of the subscription's grace period in ISO-8601 standard",
            "example": "P3D"
          },
          "trial_duration": {
            "type": "string",
            "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
            "nullable": true,
            "description": "The duration of the subcription's trial period in ISO-8601 standard",
            "example": "P1W"
          }
        }
      }
    },
    "headers": {
      "RateLimitCurrentLimit": {
        "required": true,
        "description": "The rate limit for this endpoint, expressed in requests per minute.",
        "schema": {
          "type": "integer"
        },
        "example": 30
      },
      "RateLimitCurrentUsage": {
        "required": true,
        "description": "The current number of requests used for the current limit (including the current request).",
        "schema": {
          "type": "integer"
        },
        "example": 25
      },
      "RateLimitRetryAfter": {
        "required": true,
        "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
        "schema": {
          "type": "integer"
        },
        "example": 10
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "parameter_error",
                        "invalid_request"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "parameter_error": {
                "value": {
                  "type": "parameter_error",
                  "param": "customer_id",
                  "message": "id is too long",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/parameter-error"
                }
              },
              "invalid_request": {
                "value": {
                  "type": "invalid_request",
                  "message": "Content-Type not application/json",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/invalid-request"
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "resource_already_exists",
                        "idempotency_error"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "resource_already_exists": {
                "value": {
                  "type": "resource_already_exists",
                  "message": "Name is already taken",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/resource-already-exists"
                }
              },
              "idempotency_error": {
                "value": {
                  "type": "idempotency_error",
                  "message": "Idempotency key already used for a different request",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/idempotency-error"
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "authorization_error"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "authorization_error",
                "message": "You're not authorized to access this resource",
                "retryable": false,
                "doc_url": "https://errors.rev.cat/authorization-error"
              }
            }
          }
        }
      },
      "InternalError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "server_error"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "server_error",
                "message": "There was an internal server error",
                "retryable": true,
                "doc_url": "https://errors.rev.cat/server-error",
                "backoff_ms": 1000
              }
            }
          }
        }
      },
      "Locked": {
        "description": "Locked",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "resource_locked_error"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "resource_locked_error",
                "message": "The resource is currently being modified by a concurrent request",
                "retryable": true,
                "doc_url": "https://errors.rev.cat/resource-locked-error",
                "backoff_ms": 1000
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "resource_missing"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "resource_missing",
                "message": "Resource not found",
                "retryable": false,
                "doc_url": "https://errors.rev.cat/resource-missing"
              }
            }
          }
        }
      },
      "RateLimited": {
        "description": "The request could not be completed because the rate limiting domain for this endpoint is currently at its limit for this project.",
        "headers": {
          "RevenueCat-Rate-Limit-Current-Usage": {
            "required": true,
            "description": "The current number of requests used for the current limit (including the current request).",
            "schema": {
              "type": "integer"
            },
            "example": 25
          },
          "RevenueCat-Rate-Limit-Current-Limit": {
            "required": true,
            "description": "The rate limit for this endpoint, expressed in requests per minute.",
            "schema": {
              "type": "integer"
            },
            "example": 30
          },
          "Retry-After": {
            "required": true,
            "description": "The number of seconds to wait before retrying a rate limited request.Only present when a request is rate limited.",
            "schema": {
              "type": "integer"
            },
            "example": 10
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "rate_limit_error"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "rate_limit_error",
                "message": "Rate limit exceeded",
                "retryable": true,
                "doc_url": "https://errors.rev.cat/rate-limit-error",
                "backoff_ms": 1000
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "authentication_error"
                      ]
                    }
                  }
                }
              ],
              "example": {
                "type": "authentication_error",
                "message": "Invalid API key",
                "retryable": false,
                "doc_url": "https://errors.rev.cat/authentication-error"
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable entity",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "message",
                    "retryable"
                  ],
                  "properties": {
                    "type": {
                      "description": "The error type",
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "parameter_error",
                        "resource_already_exists",
                        "resource_missing",
                        "idempotency_error",
                        "rate_limit_error",
                        "authentication_error",
                        "authorization_error",
                        "store_error",
                        "server_error",
                        "resource_locked_error",
                        "unprocessable_entity_error",
                        "invalid_request"
                      ],
                      "example": "parameter_error"
                    },
                    "param": {
                      "description": "If the error is parameter-specific, the parameter related to the error",
                      "type": "string",
                      "nullable": true,
                      "example": "customer_id"
                    },
                    "doc_url": {
                      "description": "A URL to more information about the error reported",
                      "type": "string",
                      "nullable": false,
                      "example": "https://errors.rev.cat/parameter-error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the reason of the error",
                      "nullable": false,
                      "example": "id shouldn't be longer than 1,500 characters"
                    },
                    "retryable": {
                      "description": "Indicates if the error is retryable or not",
                      "type": "boolean",
                      "nullable": false,
                      "example": false
                    },
                    "backoff_ms": {
                      "description": "The ms the client should wait before retrying the request. Only present for retryable errors.",
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "unprocessable_entity_error",
                        "parameter_error",
                        "store_error"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "unprocessable_entity": {
                "value": {
                  "type": "unprocessable_entity_error",
                  "message": "Cannot delete a product that has purchases",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/unprocessable-entity-error"
                }
              },
              "parameter_error": {
                "value": {
                  "type": "parameter_error",
                  "message": "Date must in the future",
                  "retryable": false,
                  "doc_url": "https://errors.rev.cat/parameter-error"
                }
              },
              "store_error": {
                "value": {
                  "type": "store_error",
                  "message": "There was a problem on the App Store",
                  "retryable": true,
                  "doc_url": "https://errors.rev.cat/store-error",
                  "backoff_ms": 1000
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "openapi": "3.0.0"
}